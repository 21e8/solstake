{"version":3,"sources":["wallet-adapters/ledger/core.ts","validators/pubkey.ts","validators/bignum.ts","validators/accounts/accounts.ts","utils/ids.ts","utils/stakeAccounts.ts","utils/utils.ts","contexts/connection.tsx","utils/block.ts","contexts/epoch.tsx","utils/notifications.tsx","wallet-adapters/ledger/index.tsx","wallet-adapters/phantom/index.tsx","wallet-adapters/walletProviders.ts","contexts/wallet.tsx","components/ValidatorScoreTray.tsx","utils/validatorsApp.ts","utils/stakeviewApp.ts","contexts/validators.tsx","components/DelegateDialog.tsx","components/StakeAccount.tsx","assets/logo-white.svg","components/HelpDialog.tsx","utils/epoch.ts","components/Epoch.tsx","contexts/accounts.tsx","components/CreateStakeAccount.tsx","components/WalletSummary.tsx","components/WalletConnector.tsx","views/DApp.tsx","assets/discord-brands.svg","utils/email.ts","views/Landing.tsx","assets/theme.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MAX_PAYLOAD","LEDGER_CLA","ledgerSend","transport","instruction","p1","payload","a","p2","payloadOffset","length","chunk","slice","console","log","toString","send","Error","reply","BIP32_HARDENED_BIT","harden","n","getSolanaDerivationPath","account","change","undefined","derivationPath","Buffer","alloc","offset","writeUInt8","writeUInt32BE","signTransaction","transaction","messageBytes","serializeMessage","signBytes","bytes","numPaths","concat","getPublicKey","publicKeyBytes","PublicKey","PublicKeyFromString","coerce","instance","string","value","BigNumFromString","BN","StakeAccountType","enums","StakeMeta","type","rentExemptReserve","authorized","staker","withdrawer","lockup","unixTimestamp","number","epoch","custodian","StakeAccountInfo","meta","stake","nullable","delegation","voter","activationEpoch","deactivationEpoch","warmupCooldownRate","creditsObserved","StakeAccount","info","STAKE_PROGRAM_ID","promiseAllInBatches","tasks","batchSize","results","currentTasks","splice","Promise","all","map","task","accounInfoToStakeAccount","data","create","parsed","sortStakeAccountMetas","stakeAccountMetas","sort","b","seed","connection","walletAddress","newStakeAccountMetas","Array","from","keys","i","createWithSeed","then","pubkey","solflareStakeAccountSeedPubkeys","naturalStakeAccountSeedPubkeys","getParsedProgramAccounts","StakeProgram","programId","filters","dataSize","memcmp","toBase58","forEach","stakeAccount","matchingSolflareSeed","find","element","equals","matchingNaturalSeed","balanceLamports","lamports","push","address","inflationRewards","getEpochInfo","epochInfo","delegatedActivationEpochs","filter","toNumber","minEpoch","Math","min","startEpoch","getInflationReward","accountMeta","inflationReward","index","formatPriceNumber","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","useLocalStorageState","key","defaultState","useState","storedState","localStorage","getItem","JSON","parse","state","setState","setLocalStorageState","useCallback","newState","removeItem","setItem","stringify","shortenAddress","chars","currency","formatPct","humanizeDuration","HumanizeDuration","HumanizeDurationLanguage","sleep","ms","resolve","setTimeout","setOptions","language","spacer","delimiter","round","units","largest","addLanguage","y","mo","w","d","h","m","s","decimal","ENDPOINTS","name","url","clusterApiUrl","DEFAULT","ConnectionContext","React","createContext","cluster","setUrl","Connection","sendConnection","ConnectionProvider","children","useMemo","endpoint","end","Provider","useConnection","useContext","useSendConnection","useConnectionConfig","context","sendTransaction","wallet","instructions","signers","publicKey","Transaction","feePayer","add","getRecentBlockhash","recentBlockhash","blockhash","partialSign","rawTransaction","serialize","options","skipPreflight","commitment","sendRawTransaction","txid","useSolanaExplorerUrlSuffix","getFirstBlockTime","slot","getBlockTime","blockTime","EpochContext","epochSchedule","epochStartTime","EpochProvider","setEpochInfo","setEpochSchedule","setEpochStartTime","useEffect","getEpochSchedule","getFirstSlotInEpoch","confirmTransaction","signature","startTime","Date","result","err","getTime","notify","message","description","useMonitorTransaction","useSnackbar","enqueueSnackbar","closeSnackbar","sending","setSending","signaturePromise","onSuccess","onError","id","variant","persist","action","ViewTransactionOnExplorerButton","autoHideDuration","warn","monitorTransaction","urlSuffix","Button","color","component","target","rel","href","TRANSPORT","LedgerWalletAdapter","_connecting","_publicKey","_transport","this","addSignature","TransportWebHID","emit","disconnect","close","EventEmitter","PhantomWalletAdapter","_handleConnect","args","_handleDisconnect","connect","bind","window","solana","isPhantom","_provider","isConnected","autoApprove","transactions","signAllTransactions","listeners","on","ASSETS_URL","WALLET_PROVIDERS","icon","adapter","WalletContext","connected","select","provider","WalletProvider","autoConnect","setAutoConnect","providerUrl","setProviderUrl","Wallet","setConnected","walletPublicKey","substring","isModalVisible","setIsModalVisible","Dialog","title","open","onClose","fullWidth","DialogContent","Box","size","onClick","display","alignItems","width","textAlign","alt","height","src","marginRight","DialogActions","useWallet","ScoreIcon","props","header","score","Tooltip","faCircle","className","faMinusCircle","ValidatorScoreTray","validatorScore","Typography","root_distance_score","vote_distance_score","skipped_slot_score","published_information_score","software_version_score","security_report_score","stake_concentration_score","data_center_concentration_score","total_score","BASE_URL","ValidatorScore","software_version","ValidatorList","array","fetch","headers","process","response","json","validatorList","STAKEVIEW_APP_URL","ValidatorApy","vote","apy","StakeViewAppResult","validators","CONFIG_PROGRAM_ID","getProgramAccounts","validatorInfoAccounts","flatMap","validatorInfoAccount","validatorInfo","ValidatorInfo","fromConfigData","ValidatorsContext","voteAccountInfos","validatorInfos","validatorScores","validatorApys","totalActivatedStake","ValidatorsProvider","setVoteAccountInfos","setValidatorInfos","setValidatorScores","setValidatorApys","setTotalActivatedStake","getVoteAccounts","voteAccountStatus","activatedStake","current","delinquent","reduce","sum","getValidatorInfos","getValidatorScores","getStakeviewApys","basicCellRenderer","cellData","basicHeaderRenderer","label","scoreCellRenderer","BATCH_SIZE","batchMatcher","onValidatorMetas","abortSignal","validatorMetas","remainingVoteAccountInfos","remainingValidatorInfos","remainingValidatorApys","voteAccountIndex","findIndex","nodePubkey","voteAccountInfo","validatorInfoIndex","validatorApyIndex","validatorApy","aborted","DelegateDialog","stakePubkey","handleClose","maxComission","setMaxComission","setValidatorMetas","filteredValidatorMetas","setFilteredValidatorMetas","selectedIndex","setSelectedIndex","validator","useParams","searchCriteria","setSearchCriteria","useAsyncAbortable","votePubkeyMatches","votePubkey","includes","nameMatches","toLowerCase","commission","maxWidth","DialogTitle","Slider","onChange","event","newValue","aria-labelledby","step","valueLabelDisplay","TextField","placeholder","e","InputProps","endAdornment","InputAdornment","position","inputProps","headerHeight","rowHeight","rowCount","rowGetter","onRowClick","rowRenderer","defaultRowRenderer","dataKey","cellDataGetter","rowData","keybaseUsername","cellRenderer","headerRenderer","Link","format","LAMPORTS_PER_SOL","verticalAlign","website","disabled","delegate","authorizedPubkey","CircularProgress","MAX_EPOCH","pow","sub","StakeAccountCard","stakeAccountMeta","rewardsOpen","setRewardsOpen","delegateOpen","setDelegateOpen","stakeActivationData","setStakeActivationData","withdrawOpen","setWithdrawOpen","activatedBlockTime","setActivatedBlockTime","isCopied","setIsCopied","formatEpoch","eq","_rpcEndpoint","getStakeActivation","catch","error","totalRewards","amount","firstActivatedSlot","APR","initialStake","timePeriod","voteAccountAddress","borderBottomLeftRadius","borderBottomRightRadius","hidden","deactivate","WithdrawDialog","userPublicKey","stakeAccountLamports","xmlns","fill","viewBox","stroke","stroke-linecap","stroke-linejoin","stroke-width","text","onCopy","direction","backgroundColor","fill-rule","clip-rule","Collapse","in","timeout","unmountOnExit","List","disablePadding","ListItem","paddingLeft","ListItemText","primary","setAmount","max","withdraw","toPubkey","Number","_extends","Object","assign","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref6","_ref7","_ref9","_ref11","_ref12","_ref13","SvgLogoWhite","_ref","svgRef","titleId","ref","ForwardRef","HelpDialog","getDashboardEpochInfo","slotIndex","slotsInEpoch","epochProgress","timePerSlotSamples","samplePeriodSecs","numSlots","sample","samplesInHour","avgSlotTime_1h","cur","hourlySlotTime","epochTimeRemaining","Epoch","dashboardEpochInfo","setDashboardEpochInfo","update","setInterval","clearInterval","humanize","AccountsContext","systemProgramAccountInfo","AccountsProvider","setSystemProgramAccountInfo","getAccountInfo","accountInfo","subscriptionId","onAccountChange","removeAccountChangeListener","CreateStakeAccountDialog","setOpen","setError","helperText","getMinimumBalanceForRentExemption","space","createAccountWithSeed","fromPubkey","basePubkey","Authorized","SOLUSDPriceAccountKey","priceAccountInfo","parsePriceData","price","confidence","seedIndex","newStakeAccountPubkey","WalletSummary","addStakeAccount","SOLPriceUSD","setSOLPriceUSD","setSeed","getSOLPriceUSD","totalStakedSOL","totalLamports","findFirstAvailableSeed","balance","ratio","floor","backgroundImage","WalletConnector","publicKeyString","newPublicKeyString","Boolean","setPublicKeyString","StakeAccounts","onStakeAccountChangeCallback","keyedAccountInfo","_context","stakeAccounts","accountId","extistingStakeAccountMeta","updatedStakeAccounts","getParsedAccountInfo","parsedAccountInfo","owner","newStakeAccount","accountInfoToStakeAccount","ClusterSelector","DApp","loading","setLoading","setStakeAccounts","stakeAccountPublicKey","newStakeAccounts","keyedPublicKey","newPublicKey","findStakeAccountMetas","onProgramAccountChange","removeProgramAccountChangeListener","subscriptionIds","default","to","IconButton","Info","SvgDiscordBrands","focusable","role","submitEmail","email","method","body","ok","styles","largeIcon","fontSize","SendButton","callback","Send","useStyles","makeStyles","theme","createStyles","root","flexGrow","Landing","setEmail","isEmailValid","setIsEmailValid","content","severity","setMessage","openVideo","setOpenVideo","submitAndFeedback","classes","Grid","container","justify","minHeight","overflow","item","xs","visibility","textDecoration","onKeyDown","isValid","test","String","validateEmail","GitHub","YouTube","SvgIcon","Twitter","frameBorder","allow","allowFullScreen","Snackbar","Alert","createMuiTheme","palette","main","secondary","typography","fontFamily","App","maxSnack","ThemeProvider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1d03fd6.chunk.js","sourcesContent":["import type Transport from \"@ledgerhq/hw-transport\";\nimport type { Transaction } from \"@solana/web3.js\";\n\nimport { PublicKey } from \"@solana/web3.js\";\n\nconst INS_GET_PUBKEY = 0x05;\nconst INS_SIGN_MESSAGE = 0x06;\n\nconst P1_NON_CONFIRM = 0x00;\nconst P1_CONFIRM = 0x01;\n\nconst P2_EXTEND = 0x01;\nconst P2_MORE = 0x02;\n\nconst MAX_PAYLOAD = 255;\n\nconst LEDGER_CLA = 0xe0;\n\n/*\n * Helper for chunked send of large payloads\n */\nasync function ledgerSend(\n  transport: Transport,\n  instruction: number,\n  p1: number,\n  payload: Buffer\n) {\n  let p2 = 0;\n  let payloadOffset = 0;\n\n  if (payload.length > MAX_PAYLOAD) {\n    while (payload.length - payloadOffset > MAX_PAYLOAD) {\n      const chunk = payload.slice(payloadOffset, payloadOffset + MAX_PAYLOAD);\n      payloadOffset += MAX_PAYLOAD;\n      console.log(\n        \"send\",\n        (p2 | P2_MORE).toString(16),\n        chunk.length.toString(16),\n        chunk\n      );\n      const reply = await transport.send(\n        LEDGER_CLA,\n        instruction,\n        p1,\n        p2 | P2_MORE,\n        chunk\n      );\n      if (reply.length !== 2) {\n        throw new Error(\"Received unexpected reply payload\");\n      }\n      p2 |= P2_EXTEND;\n    }\n  }\n\n  const chunk = payload.slice(payloadOffset);\n  console.log(\"send\", p2.toString(16), chunk.length.toString(16), chunk);\n  const reply = await transport.send(LEDGER_CLA, instruction, p1, p2, chunk);\n\n  return reply.slice(0, reply.length - 2);\n}\n\nconst BIP32_HARDENED_BIT = (1 << 31) >>> 0;\nfunction harden(n: number = 0) {\n  return (n | BIP32_HARDENED_BIT) >>> 0;\n}\n\nexport function getSolanaDerivationPath(account?: number, change?: number) {\n  var length;\n  if (account !== undefined) {\n    if (change !== undefined) {\n      length = 4;\n    } else {\n      length = 3;\n    }\n  } else {\n    length = 2;\n  }\n\n  var derivationPath = Buffer.alloc(1 + length * 4);\n  // eslint-disable-next-line\n  var offset = 0;\n  offset = derivationPath.writeUInt8(length, offset);\n  offset = derivationPath.writeUInt32BE(harden(44), offset); // Using BIP44\n  offset = derivationPath.writeUInt32BE(harden(501), offset); // Solana's BIP44 path\n\n  if (length > 2) {\n    offset = derivationPath.writeUInt32BE(harden(account), offset);\n    if (length === 4) {\n      // @FIXME: https://github.com/project-serum/spl-token-wallet/issues/59\n      derivationPath.writeUInt32BE(harden(change), offset);\n    }\n  }\n\n  return derivationPath;\n}\n\nexport async function signTransaction(\n  transport: Transport,\n  transaction: Transaction,\n  derivationPath: Buffer = getSolanaDerivationPath()\n) {\n  const messageBytes = transaction.serializeMessage();\n  return signBytes(transport, messageBytes, derivationPath);\n}\n\nexport async function signBytes(\n  transport: Transport,\n  bytes: Buffer,\n  derivationPath: Buffer = getSolanaDerivationPath()\n) {\n  const numPaths = Buffer.alloc(1);\n  numPaths.writeUInt8(1, 0);\n\n  const payload = Buffer.concat([numPaths, derivationPath, bytes]);\n\n  // @FIXME: must enable blind signing in Solana Ledger App per https://github.com/project-serum/spl-token-wallet/issues/71\n  // See also https://github.com/project-serum/spl-token-wallet/pull/23#issuecomment-712317053\n  return ledgerSend(transport, INS_SIGN_MESSAGE, P1_CONFIRM, payload);\n}\n\nexport async function getPublicKey(\n  transport: Transport,\n  derivationPath: Buffer = getSolanaDerivationPath()\n) {\n  const publicKeyBytes = await ledgerSend(\n    transport,\n    INS_GET_PUBKEY,\n    P1_NON_CONFIRM,\n    derivationPath\n  );\n\n  return new PublicKey(publicKeyBytes);\n}\n","import { coerce, instance, string } from \"superstruct\";\nimport { PublicKey } from \"@solana/web3.js\";\n\nexport const PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  (value) => new PublicKey(value)\n);\n","import { coerce, instance, string } from \"superstruct\";\nimport BN from \"bn.js\";\n\nexport const BigNumFromString = coerce(instance(BN), string(), (value) => {\n  if (typeof value === \"string\") return new BN(value, 10);\n  throw new Error(\"invalid big num\");\n});\n","/* eslint-disable @typescript-eslint/no-redeclare */\n\nimport { Infer, number, nullable, enums, type } from \"superstruct\";\nimport { PublicKeyFromString } from '../pubkey';\nimport { BigNumFromString } from '../bignum';\n\nexport type StakeAccountType = Infer<typeof StakeAccountType>;\nexport const StakeAccountType = enums([\n  \"uninitialized\",\n  \"initialized\",\n  \"delegated\",\n  \"rewardsPool\",\n]);\n\nexport type StakeMeta = Infer<typeof StakeMeta>;\nexport const StakeMeta = type({\n  rentExemptReserve: BigNumFromString,\n  authorized: type({\n    staker: PublicKeyFromString,\n    withdrawer: PublicKeyFromString,\n  }),\n  lockup: type({\n    unixTimestamp: number(),\n    epoch: number(),\n    custodian: PublicKeyFromString,\n  }),\n});\n\nexport type StakeAccountInfo = Infer<typeof StakeAccountInfo>;\nexport const StakeAccountInfo = type({\n  meta: StakeMeta,\n  stake: nullable(\n    type({\n      delegation: type({\n        voter: PublicKeyFromString,\n        stake: BigNumFromString,\n        activationEpoch: BigNumFromString,\n        deactivationEpoch: BigNumFromString,\n        warmupCooldownRate: number(),\n      }),\n      creditsObserved: number(),\n    })\n  ),\n});\n\nexport type StakeAccount = Infer<typeof StakeAccount>;\nexport const StakeAccount = type({\n  type: StakeAccountType,\n  info: StakeAccountInfo,\n});\n","import { PublicKey } from \"@solana/web3.js\";\n\nexport const STAKE_PROGRAM_ID = new PublicKey('Stake11111111111111111111111111111111111111');","import { AccountInfo, Connection, InflationReward, ParsedAccountData, PublicKey, StakeProgram } from \"@solana/web3.js\";\nimport { create } from \"superstruct\";\nimport { StakeAccount } from \"../validators/accounts/accounts\";\nimport { STAKE_PROGRAM_ID } from \"./ids\";\n\nexport interface StakeAccountMeta {\n  address: PublicKey;\n  seed: string;\n  lamports: number;\n  stakeAccount: StakeAccount;\n  inflationRewards: InflationReward[]\n}\n\nasync function promiseAllInBatches<T>(tasks: (() => Promise<T>)[], batchSize: number) {\n  let results: T[] = [];\n  while(tasks.length > 0) {\n    const currentTasks = tasks.splice(0, batchSize);\n    results = results.concat(await Promise.all(currentTasks.map(task => task())));\n    console.log('batch finished');\n  }\n  return results;\n}\n\nexport function accounInfoToStakeAccount(account: AccountInfo<Buffer | ParsedAccountData>): StakeAccount | undefined {\n  return ('parsed' in account?.data && create(account.data.parsed, StakeAccount)) || undefined;\n}\n\nexport function sortStakeAccountMetas(stakeAccountMetas: StakeAccountMeta[]) {\n  stakeAccountMetas.sort((a, b) => {\n    if (a.seed < b.seed) {\n      return -1\n    }\n    else if(a.seed > b.seed) {\n      return 1\n    }\n    return 0;\n  });\n}\n\nexport async function findStakeAccountMetas(connection: Connection, walletAddress: PublicKey): Promise<StakeAccountMeta[]> {\n  let newStakeAccountMetas: StakeAccountMeta[] = [];\n\n  // Create potential solflare seed PDAs\n  const solflareStakeAccountSeedPubkeys = await Promise.all(Array.from(Array(20).keys()).map(async i => {\n    const seed = `stake:${i}`;\n    return PublicKey.createWithSeed(walletAddress, seed, STAKE_PROGRAM_ID).then(pubkey => ({seed, pubkey}));\n  }));\n\n  const naturalStakeAccountSeedPubkeys = await Promise.all(Array.from(Array(20).keys()).map(async i => {\n    const seed = `${i}`;\n    return PublicKey.createWithSeed(walletAddress, seed, STAKE_PROGRAM_ID).then(pubkey => ({seed, pubkey}));\n  }));\n\n  const parsedStakeAccounts = await connection.getParsedProgramAccounts(\n    StakeProgram.programId,\n    {\n      filters: [\n        {dataSize: 200}, // TODO: Trent said we might want to exclude the dataSize filter\n        {\n          memcmp: {\n            offset: 12,\n            bytes: walletAddress.toBase58()\n          }\n        }\n      ]\n    });\n  \n  parsedStakeAccounts.forEach(({pubkey, account}) => {\n    console.log('parsed' in account?.data ? account?.data.parsed : \"Does not contain parsed data\");\n    const stakeAccount = accounInfoToStakeAccount(account);\n    if (!stakeAccount) {\n      return;\n    }\n\n    // We identify accounts with the solflare seed, or natural seed only for now\n    const matchingSolflareSeed = solflareStakeAccountSeedPubkeys.find(element => element.pubkey.equals(pubkey))?.seed;\n    const matchingNaturalSeed = naturalStakeAccountSeedPubkeys.find(element => element.pubkey.equals(pubkey))?.seed;\n    const seed = matchingSolflareSeed || matchingNaturalSeed || `${pubkey.toBase58().slice(12)}...`;\n\n    const balanceLamports = account.lamports;\n    newStakeAccountMetas.push({\n      address: pubkey,\n      seed,\n      lamports: balanceLamports,\n      stakeAccount,\n      inflationRewards: []\n    });\n  });\n  \n  const epochInfo = await connection.getEpochInfo();\n\n  const delegatedActivationEpochs = newStakeAccountMetas\n    .filter(meta => meta.stakeAccount.info.stake?.delegation.activationEpoch)\n    .map(meta => meta.stakeAccount.info.stake?.delegation.activationEpoch?.toNumber() ?? 1000) // null coallescing not possible here\n\n  if(delegatedActivationEpochs.length !== 0) {\n    const minEpoch = Math.min(\n      ...delegatedActivationEpochs\n    );\n\n    console.log(`minEpoch: ${minEpoch}`);\n\n    let startEpoch = epochInfo.epoch - 1; // No rewards yet for the current epoch, so query from previous epoch\n    const tasks: (() => Promise<(InflationReward | null)[]>)[] = [];\n    for(let epoch = startEpoch;epoch > minEpoch;epoch--) {\n      tasks.push(() => connection.getInflationReward(\n        newStakeAccountMetas.map(accountMeta => accountMeta.address),\n        epoch,\n        'finalized'\n      ));\n    }\n\n    sortStakeAccountMetas(newStakeAccountMetas);\n\n    const inflationRewardsResults = await promiseAllInBatches(tasks, 4);\n    inflationRewardsResults.forEach(inflationRewards => inflationRewards.forEach((inflationReward, index) => {\n      if (inflationReward) {\n        newStakeAccountMetas[index].inflationRewards.push(inflationReward)\n      }\n    }));\n  }\n\n  return newStakeAccountMetas;\n}","import { useCallback, useState } from \"react\";\nimport {\n  HumanizeDuration,\n  HumanizeDurationLanguage,\n} from \"humanize-duration-ts\";\n\nexport const formatPriceNumber = new Intl.NumberFormat(\"en-US\", {\n  style: \"decimal\",\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nexport function useLocalStorageState(key: string, defaultState?: string) {\n  const [state, setState] = useState(() => {\n    // NOTE: Not sure if this is ok\n    const storedState = localStorage.getItem(key);\n    if (storedState) {\n      return JSON.parse(storedState);\n    }\n    return defaultState;\n  });\n\n  const setLocalStorageState = useCallback(\n    (newState) => {\n      const changed = state !== newState;\n      if (!changed) {\n        return;\n      }\n      setState(newState);\n      if (newState === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, JSON.stringify(newState));\n      }\n    },\n    [state, key]\n  );\n\n  return [state, setLocalStorageState];\n}\n\n// shorten the checksummed version of the input address to have 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\n}\n\nexport function chunks<T>(array: T[], size: number): T[][] {\n  return Array.apply<number, T[], T[][]>(\n    0,\n    new Array(Math.ceil(array.length / size))\n  ).map((_, index) => array.slice(index * size, (index + 1) * size));\n}\n\nvar SI_SYMBOL = [\"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\"];\n\nconst abbreviateNumber = (number: number, precision: number) => {\n  let tier = (Math.log10(number) / 3) | 0;\n  let scaled = number;\n  let suffix = SI_SYMBOL[tier];\n  if (tier !== 0) {\n    let scale = Math.pow(10, tier * 3);\n    scaled = number / scale;\n  }\n\n  return scaled.toFixed(precision) + suffix;\n};\n\nexport const formatAmount = (\n  val: number,\n  precision: number = 6,\n  abbr: boolean = true\n) => (abbr ? abbreviateNumber(val, precision) : val.toFixed(precision));\n\nexport const formatUSD = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n});\n\nexport const numberFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"decimal\",\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nexport const isSmallNumber = (val: number) => {\n  return val < 0.001 && val > 0;\n};\n\nexport const formatNumber = {\n  format: (val?: number, useSmall?: boolean) => {\n    if (!val) {\n      return \"--\";\n    }\n    if (useSmall && isSmallNumber(val)) {\n      return 0.001;\n    }\n\n    return numberFormatter.format(val);\n  },\n};\n\nexport const feeFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"decimal\",\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 9,\n});\n\nexport const formatPct = new Intl.NumberFormat(\"en-US\", {\n  style: \"percent\",\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nexport const humanizeDuration = new HumanizeDuration(new HumanizeDurationLanguage());\nhumanizeDuration.setOptions({\n  language: \"short\",\n  spacer: \"\",\n  delimiter: \" \",\n  round: true,\n  units: [\"d\", \"h\", \"m\", \"s\"],\n  largest: 3,\n});\nhumanizeDuration.addLanguage(\"short\", {\n  y: () => \"y\",\n  mo: () => \"mo\",\n  w: () => \"w\",\n  d: () => \"d\",\n  h: () => \"h\",\n  m: () => \"m\",\n  s: () => \"s\",\n  ms: () => \"ms\",\n  decimal: \".\",\n});\n\nexport function sleep(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}","import { useLocalStorageState } from \"./../utils/utils\";\nimport {\n  Cluster,\n  clusterApiUrl,\n  Connection,\n  Signer,\n  Transaction,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\nimport React, { useContext, useMemo } from \"react\";\nimport { WalletAdapter } from \"../wallet-adapters/walletAdapter\";\n\nexport type ExtendedCluster = Cluster | \"localnet\";\n\ninterface Endpoint {\n    name: ExtendedCluster,\n    url: string,\n};\n\nexport const ENDPOINTS: Endpoint[] = [\n  {\n    name: \"mainnet-beta\",\n    url: 'https://solstake.rpcpool.com',\n  },\n  {\n    name: \"testnet\",\n    url: 'https://solstake.testnet.rpcpool.com',\n  },\n  {\n    name: \"devnet\",\n    url: clusterApiUrl(\"devnet\"),\n  },\n  {\n    name: \"localnet\",\n    url: \"http://127.0.0.1:8899\",\n  },\n];\n\nconst DEFAULT = ENDPOINTS[0].url;\n\ninterface ConnectionConfig {\n  cluster: ExtendedCluster;\n  url: string;\n  setUrl: (val: string) => void;\n  connection: Connection;\n  sendConnection: Connection;\n}\n\nconst ConnectionContext = React.createContext<ConnectionConfig>({\n  cluster: ENDPOINTS[0].name,\n  url: DEFAULT,\n  setUrl: () => {},\n  connection: new Connection(DEFAULT, \"confirmed\"),\n  sendConnection: new Connection(DEFAULT, \"confirmed\"),\n});\n\nexport function ConnectionProvider({ children = undefined as any }) {\n  const [url, setUrl] = useLocalStorageState(\n    \"connectionUrls\",\n    ENDPOINTS[0].url\n  );\n\n  const connection = useMemo(() => new Connection(url, \"confirmed\"), [\n    url,\n  ]);\n  const sendConnection = useMemo(() => new Connection(url, \"confirmed\"), [\n    url,\n  ]);\n\n  const endpoint =\n    ENDPOINTS.find((end) => end.url === url) || ENDPOINTS[0];\n\n  return (\n    <ConnectionContext.Provider\n      value={{\n        cluster: endpoint.name,\n        url,\n        setUrl,\n        connection,\n        sendConnection,\n      }}\n    >\n      {children}\n    </ConnectionContext.Provider>\n  );\n}\n\nexport function useConnection() {\n  return useContext(ConnectionContext).connection;\n}\n\nexport function useSendConnection() {\n  return useContext(ConnectionContext).sendConnection;\n}\n\nexport function useConnectionConfig() {\n  const context = useContext(ConnectionContext);\n  return {\n    cluster: context.cluster,\n    url: context.url,\n    setUrl: context.setUrl,\n  };\n}\n\nexport async function sendTransaction(\n  connection: Connection,\n  wallet: WalletAdapter,\n  instructions: TransactionInstruction[],\n  signers: Signer[],\n) {\n  if (!wallet?.publicKey) {\n    throw new Error(\"Wallet is not connected\");\n  }\n\n  let transaction = new Transaction({feePayer: wallet.publicKey});\n  transaction.add(...instructions);\n  transaction.recentBlockhash = (\n    await connection.getRecentBlockhash(\"finalized\")\n  ).blockhash;\n  if(signers.length > 0) {\n    transaction.partialSign(...signers);\n  }\n  transaction = await wallet.signTransaction(transaction);\n  const rawTransaction = transaction.serialize();\n  let options = {\n    skipPreflight: true,\n    commitment: \"processed\",\n  };\n\n  const txid = await connection.sendRawTransaction(rawTransaction, options);\n  return txid;\n};\n\nexport function useSolanaExplorerUrlSuffix() {\n  const context = useContext(ConnectionContext);\n  if (!context) {\n    throw new Error('Missing connection context');\n  }\n  const endpoint = context.url;\n  if (endpoint === clusterApiUrl('devnet')) {\n    return '?cluster=devnet';\n  } else if (endpoint === clusterApiUrl('testnet')) {\n    return '?cluster=testnet';\n  }\n  return '';\n}\n","import { Connection } from \"@solana/web3.js\";\nimport { sleep } from \"./utils\";\n\n// Returns if 10 consecutive missing slots to avoid deadlock\nexport async function getFirstBlockTime(connection: Connection, slot: number) {\n  for(let i = 0;i<10;i++) {\n    try {\n      const blockTime = await connection.getBlockTime(slot + i);\n      if (blockTime) {\n        return blockTime;\n      }\n    }\n    catch { } // TODO: More selective rather than catch all\n    await sleep(250);\n  }\n  console.log(`Could not find a blockTime slot: ${slot}`);\n  return;\n}","import { EpochInfo, EpochSchedule } from \"@solana/web3.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { getFirstBlockTime } from \"../utils/block\";\nimport { useConnection } from \"./connection\";\n\ninterface EpochConfig {\n  epochInfo: EpochInfo | undefined;\n  epochSchedule: EpochSchedule | undefined;\n  epochStartTime: number | undefined;\n};\n\nexport const EpochContext = React.createContext<EpochConfig>({\n  epochInfo: undefined,\n  epochSchedule: undefined,\n  epochStartTime: undefined\n});\n\nexport function EpochProvider({ children = undefined as any }) {\n  const connection = useConnection();\n  const [epochInfo, setEpochInfo] = useState<EpochInfo>();\n  const [epochSchedule, setEpochSchedule] = useState<EpochSchedule>();\n  const [epochStartTime, setEpochStartTime] = useState<number>();\n\n  useEffect(() => {\n    setEpochInfo(undefined);\n    connection.getEpochInfo()\n      .then(setEpochInfo);\n  }, [connection]);\n\n  useEffect(() => {\n    setEpochSchedule(undefined);\n    connection.getEpochSchedule()\n      .then(setEpochSchedule);\n  }, [connection]);\n\n  useEffect(() => {\n    setEpochStartTime(undefined);\n    if(!epochInfo?.epoch || !epochSchedule) {\n      return;\n    }\n\n    const slot = epochSchedule.getFirstSlotInEpoch(epochInfo.epoch);\n    getFirstBlockTime(connection, slot)\n      .then(setEpochStartTime);\n  }, [connection, epochInfo?.epoch, epochSchedule]);\n\n  return (\n    <EpochContext.Provider\n      value={{\n        epochInfo,\n        epochSchedule,\n        epochStartTime\n      }}\n    >\n      {children}\n    </EpochContext.Provider>\n  );\n}","import { Button } from '@material-ui/core';\nimport { Connection } from '@solana/web3.js';\nimport { useSnackbar } from 'notistack';\nimport React, { useState } from 'react';\nimport { useConnection, useSolanaExplorerUrlSuffix } from '../contexts/connection';\n\nasync function confirmTransaction(\n  connection: Connection,\n  signature: string,\n) {\n  let startTime = new Date();\n  let result = await connection.confirmTransaction(signature, 'confirmed');\n  if (result.value.err) {\n    throw new Error(\n      'Error confirming transaction: ' + JSON.stringify(result.value.err),\n    );\n  }\n  console.log(\n    'Transaction confirmed after %sms',\n    new Date().getTime() - startTime.getTime(),\n  );\n  return result.value;\n}\n\nexport function notify({message, description}: {message: string, description: string}) {\n  console.log(`${message}, ${description}`);\n} \n\nexport function useMonitorTransaction() {\n  const connection = useConnection();\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const [sending, setSending] = useState(false);\n\n  async function monitorTransaction(\n    signaturePromise: Promise<string>,\n    {onSuccess, onError}: { onSuccess: (signature: string) => void, onError: (signature: string) => void },\n  ): Promise<void> {\n    let id = enqueueSnackbar('Sending transaction...', {\n      variant: 'info',\n      persist: true,\n    });\n    setSending(true);\n    try {\n      let signature = await signaturePromise;\n      closeSnackbar(id);\n      id = enqueueSnackbar('Confirming transaction...', {\n        variant: 'info',\n        persist: true,\n        action: <ViewTransactionOnExplorerButton signature={signature} />,\n      });\n      await confirmTransaction(connection, signature);\n      closeSnackbar(id);\n      setSending(false);\n      enqueueSnackbar('Transaction confirmed', {\n        variant: 'success',\n        autoHideDuration: 15000,\n        action: <ViewTransactionOnExplorerButton signature={signature} />,\n      });\n      if (onSuccess) {\n        onSuccess(signature);\n      }\n    } catch (e) {\n      closeSnackbar(id);\n      setSending(false);\n      console.warn(e);\n      enqueueSnackbar(e.message, { variant: 'error' });\n      if (onError) {\n        onError(e);\n      }\n    }\n  }\n\n  return {monitorTransaction, sending};\n}\n\nfunction ViewTransactionOnExplorerButton({ signature }: {signature: string}) {\n  const urlSuffix = useSolanaExplorerUrlSuffix();\n  return (\n    <Button\n      color=\"inherit\"\n      component=\"a\"\n      target=\"_blank\"\n      rel=\"noopener\"\n      href={`https://explorer.solana.com/tx/${signature}` + urlSuffix}\n    >\n      View on Explorer\n    </Button>\n  );\n}\n\nexport function useCallAsync() {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  return async function callAsync(\n    promise: Promise<string>,\n    {\n      progressMessage = 'Submitting...',\n      successMessage = 'Success',\n      onSuccess,\n      onError,\n    }: {\n      progressMessage: string,\n      successMessage: string,\n      onSuccess: (message: string) => void,\n      onError: (message: string) => void,\n    }\n  ) {\n    let id = enqueueSnackbar(progressMessage, {\n      variant: 'info',\n      persist: true,\n    });\n    try {\n      let result = await promise;\n      closeSnackbar(id);\n      if (successMessage) {\n        enqueueSnackbar(successMessage, { variant: 'success' });\n      }\n      if (onSuccess) {\n        onSuccess(result);\n      }\n    } catch (e) {\n      console.warn(e);\n      closeSnackbar(id);\n      enqueueSnackbar(e.message, { variant: 'error' });\n      if (onError) {\n        onError(e);\n      }\n    }\n  };\n  }","import type Transport from \"@ledgerhq/hw-transport\";\nimport type { Transaction } from \"@solana/web3.js\";\n\nimport EventEmitter from \"eventemitter3\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport TransportWebHID from \"@ledgerhq/hw-transport-webhid\";\nimport { WalletAdapter } from \"../walletAdapter\";\nimport { notify } from \"../../utils/notifications\";\nimport { getPublicKey, signTransaction } from \"./core\";\n\nlet TRANSPORT: Transport | null = null;\n\nexport class LedgerWalletAdapter extends EventEmitter implements WalletAdapter {\n  _connecting: boolean;\n  _publicKey: PublicKey | null;\n  _transport: Transport | null;\n\n  constructor() {\n    super();\n    this._connecting = false;\n    this._publicKey = null;\n    this._transport = null;\n  }\n\n  get publicKey() {\n    return this._publicKey;\n  }\n\n  async signTransaction(transaction: Transaction) {\n    if (!this._transport || !this._publicKey) {\n      throw new Error(\"Not connected to Ledger\");\n    }\n\n    // @TODO: account selection (derivation path changes with account)\n    const signature = await signTransaction(this._transport, transaction);\n\n    transaction.addSignature(this._publicKey, signature);\n\n    return transaction;\n  }\n\n  async connect() {\n    if (this._connecting) {\n      return;\n    }\n\n    this._connecting = true;\n\n    try {\n      // @TODO: transport selection (WebUSB, WebHID, bluetooth, ...)\n      if (TRANSPORT === null) {\n        TRANSPORT = await TransportWebHID.create();\n      }\n      this._transport = TRANSPORT;\n      // @TODO: account selection\n      this._publicKey = await getPublicKey(this._transport);\n      this.emit(\"connect\", this._publicKey);\n    } catch (error) {\n      notify({\n        message: \"Ledger Error\",\n        description: error.message,\n      });\n      await this.disconnect();\n    } finally {\n      this._connecting = false;\n    }\n  }\n\n  async disconnect() {\n    let emit = false;\n    if (this._transport) {\n      await this._transport.close();\n      this._transport = null;\n      emit = true;\n    }\n\n    this._connecting = false;\n    this._publicKey = null;\n\n    if (emit) {\n      this.emit(\"disconnect\");\n    }\n  }\n}\n","import { WalletAdapter } from \"../walletAdapter\";\nimport EventEmitter from 'eventemitter3'\nimport { PublicKey, Transaction } from '@solana/web3.js'\nimport { notify } from \"../../utils/notifications\";\n\ntype PhantomEvent = 'disconnect' | 'connect'\ntype PhantomRequestMethod = 'connect' | 'disconnect' | 'signTransaction' | 'signAllTransactions'\n\ninterface PhantomProvider {\n  publicKey?: PublicKey\n  isConnected?: boolean\n  autoApprove?: boolean\n  signTransaction: (transaction: Transaction) => Promise<Transaction>\n  signAllTransactions: (transactions: Transaction[]) => Promise<Transaction[]>\n  connect: () => Promise<void>\n  disconnect: () => Promise<void>\n  on: (event: PhantomEvent, handler: (args: any) => void) => void\n  request: (method: PhantomRequestMethod, params: any) => Promise<any>\n  listeners: (event: PhantomEvent) => (() => void)[]\n}\n\nexport class PhantomWalletAdapter extends EventEmitter implements WalletAdapter {\n\n  constructor() {\n    super()\n    this.connect = this.connect.bind(this)\n  }\n\n  private get _provider(): PhantomProvider | undefined {\n    if ((window as any)?.solana?.isPhantom) {\n      return (window as any).solana\n    }\n    return undefined\n  }\n\n  private _handleConnect = (...args: any) => {\n    this.emit('connect', ...args)\n  }\n\n  private _handleDisconnect = (...args: any) => {\n    this.emit('disconnect', ...args)\n  }\n\n  get connected() {\n    return this._provider?.isConnected || false\n  }\n\n  get autoApprove() {\n    return this._provider?.autoApprove || false\n  }\n\n  // eslint-disable-next-line\n  async signAllTransactions(transactions: Transaction[]): Promise<Transaction[]> {\n    if (!this._provider) {\n      return transactions\n    }\n\n    return this._provider.signAllTransactions(transactions)\n  }\n\n  get publicKey() {\n    return this._provider?.publicKey!\n  }\n\n  // eslint-disable-next-line\n  async signTransaction(transaction: Transaction) {\n    if (!this._provider) {\n      return transaction\n    }\n\n    return this._provider.signTransaction(transaction)\n  }\n\n  connect() {\n    if (!this._provider) {\n      return\n    }\n\n    if (!((window as any).solana.isPhantom)) {\n      \n      notify({\n        message: \"Phantom Error\",\n        description: \"Please install Phantom wallet from Chrome \",\n      });\n      return;\n    }\n\n\n    if (this._provider && !this._provider.listeners('connect').length) {\n      this._provider?.on('connect', this._handleConnect)\n    }\n    if (!this._provider.listeners('disconnect').length) {\n        this._provider?.on('disconnect', this._handleDisconnect)\n    }\n    return this._provider?.connect()\n  }\n\n  disconnect() {\n    if (this._provider) {\n      this._provider.disconnect()\n    }\n  }\n}","import { LedgerWalletAdapter } from \"./ledger\";\nimport { PhantomWalletAdapter } from \"./phantom\";\n\nconst ASSETS_URL = \"https://raw.githubusercontent.com/solana-labs/oyster/main/assets/wallets/\";\n\nexport const WALLET_PROVIDERS = [\n  {\n    name: \"Sollet\",\n    url: \"https://www.sollet.io\",\n    icon: `${ASSETS_URL}sollet.svg`,\n  },\n  {\n    name: \"Solflare\",\n    url: \"https://solflare.com/access-wallet\",\n    icon: `${ASSETS_URL}solflare.svg`,\n  },\n  {\n    name: \"MathWallet\",\n    url: \"https://mathwallet.org\",\n    icon: `${ASSETS_URL}mathwallet.svg`,\n  },\n  {\n    name: \"Ledger\",\n    url: \"https://www.ledger.com\",\n    icon: `${ASSETS_URL}ledger.svg`,\n    adapter: LedgerWalletAdapter,\n  },\n  {\n    name: \"Phantom\",\n    url: \"https://phantom.app/\",\n    icon: `https://raydium.io/_nuxt/img/phantom.d9e3c61.png`,\n    adapter: PhantomWalletAdapter,\n  },\n];","import Wallet from \"@project-serum/sol-wallet-adapter\";\nimport React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { notify } from \"./../utils/notifications\";\nimport { useConnectionConfig } from \"./connection\";\nimport { useLocalStorageState } from \"../utils/utils\";\nimport { WalletAdapter } from \"../wallet-adapters/walletAdapter\";\nimport { WALLET_PROVIDERS } from \"../wallet-adapters/walletProviders\";\nimport { Box, Button, Dialog, DialogActions, DialogContent } from \"@material-ui/core\";\n\nconst WalletContext = React.createContext<{\n  wallet: WalletAdapter | undefined;\n  connected: boolean;\n  select: () => void;\n  provider: typeof WALLET_PROVIDERS[number] | undefined; // TODO: Find something better than this we should be able to have a type of WalletAdapter here\n}>({\n  wallet: undefined,\n  connected: false,\n  select() {},\n  provider: undefined,\n});\n\nexport function WalletProvider({ children = null as any }) {\n  const { url } = useConnectionConfig();\n\n  const [autoConnect, setAutoConnect] = useState(false);\n  const [providerUrl, setProviderUrl] = useLocalStorageState(\"walletProvider\");\n\n  const provider = useMemo(\n    () => WALLET_PROVIDERS.find(provider => provider.url === providerUrl),\n    [providerUrl]\n  );\n\n  const wallet = useMemo(() => {\n      if (provider) {\n        return provider.adapter ? new provider.adapter() : new Wallet(providerUrl, url);\n      }\n    },\n    [provider, providerUrl]\n  );\n\n  const [connected, setConnected] = useState(false);\n\n  useEffect(() => {\n    if (wallet) {\n      wallet.on(\"connect\", () => {\n        if (wallet.publicKey) {\n          setConnected(true);\n          const walletPublicKey = wallet.publicKey.toBase58();\n          const keyToDisplay =\n            walletPublicKey.length > 20\n              ? `${walletPublicKey.substring(\n                  0,\n                  7\n                )}.....${walletPublicKey.substring(\n                  walletPublicKey.length - 7,\n                  walletPublicKey.length\n                )}`\n              : walletPublicKey;\n\n          notify({\n            message: \"Wallet update\",\n            description: \"Connected to wallet \" + keyToDisplay,\n          });\n        }\n      });\n\n      wallet.on(\"disconnect\", () => {\n        setConnected(false);\n        notify({\n          message: \"Wallet update\",\n          description: \"Disconnected from wallet\",\n        });\n      });\n    }\n\n    return () => {\n      setConnected(false);\n      if (wallet) {\n        wallet.disconnect();\n      }\n    };\n  }, [wallet]);\n\n  useEffect(() => {\n    if (wallet && autoConnect) {\n      wallet.connect();\n      setAutoConnect(false);\n    }\n\n    return () => {};\n  }, [wallet, autoConnect]);\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const select = useCallback(() => setIsModalVisible(true), []);\n  const close = useCallback(() => setIsModalVisible(false), []);\n\n  return (\n    <WalletContext.Provider\n      value={{\n        wallet,\n        connected,\n        select,\n        provider,\n      }}\n    >\n      {children}\n      <Dialog\n        title=\"Select Wallet\"\n        open={isModalVisible}\n        onClose={close}\n        fullWidth={true}\n      >\n        <DialogContent>\n          {WALLET_PROVIDERS.map((provider) => {\n            const onClick = function () {\n              setProviderUrl(provider.url);\n              setAutoConnect(true);\n              close();\n            };\n\n            return (\n              <div key={provider.name}>\n                <Box m={1}>\n                  <Button\n                    size=\"large\"\n                    onClick={onClick}\n                    style={{\n                      display: \"inline-flex\",\n                      alignItems: \"center\",\n                      width: \"100%\",\n                      textAlign: \"left\",\n                    }}\n                    variant=\"contained\"\n                  >\n                    <img\n                      alt={`${provider.name}`}\n                      width={40}\n                      height={40}\n                      src={provider.icon}\n                      style={{ marginRight: 20 }}\n                    />\n                    {provider.name}\n                  </Button>\n                </Box>\n              </div>\n            );\n          })}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={close} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </WalletContext.Provider>\n  );\n}\n\nexport function useWallet() {\n  const { wallet, connected, provider, select } = useContext(WalletContext);\n  return {\n    wallet,\n    connected,\n    provider,\n    select,\n    publicKey: wallet?.publicKey,\n    connect() {\n      wallet ? wallet.connect() : select();\n    },\n    disconnect() {\n      wallet?.disconnect();\n    },\n  };\n}","import { Tooltip, Typography } from \"@material-ui/core\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircle, faMinusCircle } from '@fortawesome/free-solid-svg-icons';\nimport { ValidatorScore } from '../utils/validatorsApp';\n\nfunction ScoreIcon(props: {header: string, score: number}) {\n    const {header, score} = props;\n  \n    // score between -2 and 2\n    return (\n      <Tooltip title={`${header} Score = ${score}`}>\n        <span>\n          { score >= 0 ?\n            <FontAwesomeIcon icon={faCircle} className={`score-${score}`} /> :\n            <FontAwesomeIcon icon={faMinusCircle} className={score === -1 ? 'text-warning' : 'text-danger'} />\n          }\n          {' '}\n        </span>\n      </Tooltip>\n    );\n  }\n\nexport function ValidatorScoreTray(props: {validatorScore: ValidatorScore}) {\n  const { validatorScore } = props;\n  return (\n    <Typography>\n      <ScoreIcon header=\"Root Distance\" score={validatorScore.root_distance_score} />\n      <ScoreIcon header=\"Vote Distance\" score={validatorScore.vote_distance_score} />\n      <ScoreIcon header=\"Skipped Slot\" score={validatorScore.skipped_slot_score} />\n      <ScoreIcon header=\"Published Info\" score={validatorScore.published_information_score} />\n      <ScoreIcon header=\"Software Version\" score={validatorScore.software_version_score} />\n      <ScoreIcon header=\"Security Report\" score={validatorScore.security_report_score} />\n      {validatorScore.stake_concentration_score < 0 &&\n        <ScoreIcon header=\"Stake concentration\" score={validatorScore.stake_concentration_score} />\n      }\n      {(validatorScore.data_center_concentration_score ?? 0) < 0 &&\n        <ScoreIcon header=\"Data Center Centration\" score={validatorScore.data_center_concentration_score ?? 0} />\n      }\n      ({validatorScore.total_score})\n    </Typography>\n  );\n}","import { type, string, number, nullable, array, Infer } from 'superstruct';\n\nlet BASE_URL = 'https://www.validators.app/api/v1/validators';\nif (process.env.NODE_ENV !== 'production') {\n  BASE_URL = 'https://cors-anywhere.herokuapp.com/' + BASE_URL; // Do not forget to activate the endpoint\n  if (!process.env.REACT_APP_VALIDATORS_APP_TOKEN) {\n    throw new Error('Set REACT_APP_VALIDATORS_APP_TOKEN for local development');\n  }\n}\nelse {\n  console.log('Use production validators app endpoint')\n}\n\nconst ValidatorScore = type({\n  account: string(),\n  total_score: number(),\n  root_distance_score: number(),\n  vote_distance_score: number(),\n  skipped_slot_score: number(),\n  software_version: nullable(string()),\n  software_version_score: number(),\n  stake_concentration_score: number(),\n  data_center_concentration_score: nullable(number()),\n  published_information_score: number(),\n  security_report_score: number(),\n});\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type ValidatorScore = Infer<typeof ValidatorScore>;\n\nexport const ValidatorList = array(ValidatorScore);\n// eslint-disable-next-line @typescript-eslint/no-redeclare\ntype ValidatorList = Infer<typeof ValidatorList>;\n\nexport async function getValidatorScores(cluster: string): Promise<ValidatorList> {\n  if (cluster === 'mainnet-beta') {\n    cluster = 'mainnet'; // Rename cluster to validators app convention\n  }\n\n  const response = await fetch(`${BASE_URL}/${cluster}.json?order=score`, {\n    headers: {\n      'Token': process.env.REACT_APP_VALIDATORS_APP_TOKEN as string\n    }\n  });\n  const data = await response.json();\n  const validatorList = ValidatorList.create(data);\n  return validatorList;\n}","import { array, Infer, number, string, type } from 'superstruct';\n\nconst STAKEVIEW_APP_URL = 'https://stakeview.app/apy/prev3.json';\n\nconst ValidatorApy = type({\n  id: string(),\n  vote: string(),\n  apy: number(),\n});\n\nconst StakeViewAppResult = type({\n  validators: array(ValidatorApy)\n})\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type ValidatorApy = Infer<typeof ValidatorApy>;\n\nexport async function getStakeviewApys(): Promise<ValidatorApy[]> {\n  const response = await fetch(STAKEVIEW_APP_URL);\n  const data = await response.json();\n\n  const result = StakeViewAppResult.create(data);\n  return result.validators;\n}","import { Connection, PublicKey, ValidatorInfo, VoteAccountInfo } from \"@solana/web3.js\";\nimport { createContext, useEffect, useState } from \"react\";\nimport { ValidatorScore } from \"../utils/validatorsApp\";\nimport { useConnection, useConnectionConfig } from \"./connection\";\nimport { useWallet } from \"./wallet\";\nimport { getValidatorScores } from '../utils/validatorsApp'\nimport { getStakeviewApys, ValidatorApy } from \"../utils/stakeviewApp\";\n\nconst CONFIG_PROGRAM_ID = new PublicKey('Config1111111111111111111111111111111111111');\n\nasync function getValidatorInfos(connection: Connection) {\n  const validatorInfoAccounts = await connection.getProgramAccounts(CONFIG_PROGRAM_ID);\n\n  console.log(validatorInfoAccounts.length);\n  return validatorInfoAccounts.flatMap(validatorInfoAccount => {\n    const validatorInfo = ValidatorInfo.fromConfigData(validatorInfoAccount.account.data);\n    return validatorInfo ? [validatorInfo] : [];\n  })\n}\n\ninterface Validators {\n  voteAccountInfos: VoteAccountInfo[],\n  validatorInfos: ValidatorInfo[],\n  validatorScores: ValidatorScore[],\n  validatorApys: ValidatorApy[],\n  totalActivatedStake: number,\n};\n\nexport const ValidatorsContext = createContext<Validators>({\n  voteAccountInfos: [],\n  validatorInfos: [],\n  validatorScores: [],\n  validatorApys: [],\n  totalActivatedStake: 0,\n});\n\nexport function ValidatorsProvider({ children = null as any }) {\n  const [voteAccountInfos, setVoteAccountInfos] = useState<VoteAccountInfo[]>([]);\n  const [validatorInfos, setValidatorInfos] = useState<ValidatorInfo[]>([]);\n  const [validatorScores, setValidatorScores] = useState<ValidatorScore[]>([]);\n  const [validatorApys, setValidatorApys] = useState<ValidatorApy[]>([]);\n  const [totalActivatedStake, setTotalActivatedStake] = useState(0);\n\n  const connection = useConnection();\n  const { cluster } = useConnectionConfig();\n  const { connected } = useWallet();\n  \n  useEffect(() => {\n    if (!connected) { return; }\n    connection.getVoteAccounts()\n      .then(voteAccountStatus => {\n        const activatedStake = voteAccountStatus.current.concat(voteAccountStatus.delinquent).reduce((sum, current) => sum + current.activatedStake, 0);\n        console.log('totalActivatedStake', activatedStake);\n        setTotalActivatedStake(activatedStake);\n        setVoteAccountInfos(voteAccountStatus.current ?? []);\n      });\n  }, [connection, connected]);\n  \n  useEffect(() => {\n    if (!connected) { return; }\n    getValidatorInfos(connection)\n      .then(validatorInfos => {\n        console.log(`validatorInfos.length: ${validatorInfos.length}`);\n        setValidatorInfos(validatorInfos);\n      });\n  }, [connection, connected]);\n  \n  useEffect(() => {\n    if (!connected) { return; }\n    getValidatorScores(cluster)\n      .then(setValidatorScores);\n  }, [connected, cluster]);\n\n  useEffect(() => {\n    if (cluster !== 'mainnet-beta') {\n      setValidatorApys([]);\n      return;\n    }\n    getStakeviewApys()\n      .then(setValidatorApys);\n  }, [cluster])\n\n  return (\n    <ValidatorsContext.Provider\n      value={{\n        voteAccountInfos,\n        validatorInfos,\n        validatorScores,\n        validatorApys,\n        totalActivatedStake\n      }}\n    >\n      {children}\n    </ValidatorsContext.Provider>\n  );\n}","import 'react-virtualized/styles.css';\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer';\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { sendTransaction, useSendConnection, useSolanaExplorerUrlSuffix } from '../contexts/connection';\nimport { LAMPORTS_PER_SOL, PublicKey, StakeProgram, ValidatorInfo, VoteAccountInfo } from '@solana/web3.js';\nimport { Button, Typography, Dialog, DialogActions, DialogContent, DialogTitle, Slider, TextField, Link, Box, CircularProgress, InputAdornment, Tooltip } from '@material-ui/core';\nimport { useWallet } from '../contexts/wallet';\nimport { useMonitorTransaction } from '../utils/notifications';\nimport { formatPct, formatPriceNumber, shortenAddress, sleep } from '../utils/utils';\nimport { Column, Table, TableHeaderProps, TableCellProps } from 'react-virtualized';\nimport { defaultRowRenderer } from 'react-virtualized/dist/es/Table';\nimport { ValidatorScore } from '../utils/validatorsApp';\nimport { ValidatorScoreTray } from './ValidatorScoreTray';\nimport { ValidatorsContext } from '../contexts/validators';\nimport { useAsyncAbortable } from 'react-async-hook';\nimport { useParams } from 'react-router-dom';\nimport { ValidatorApy } from '../utils/stakeviewApp';\n\nconst IMG_SRC_DEFAULT = 'placeholder-questionmark.png';\n\nfunction basicCellRenderer(props: TableCellProps) {\n  return (\n    <Typography>\n      {props.cellData}\n    </Typography>\n  );\n}\n\nfunction basicHeaderRenderer(props: TableHeaderProps) {\n  return (\n    <Typography>\n      {props.label}\n    </Typography>\n  );\n}\n\nfunction scoreCellRenderer(props: TableCellProps) {\n  return props.cellData ? \n    <ValidatorScoreTray validatorScore={props.cellData} />\n    : \"N.A.\";\n}\n\ninterface ValidatorMeta {\n  voteAccountInfo: VoteAccountInfo;\n  validatorInfo: ValidatorInfo | undefined;\n  validatorScore: ValidatorScore | undefined;\n  validatorApy: ValidatorApy | undefined;\n};\n\nconst BATCH_SIZE = 100;\n\nasync function batchMatcher(\n  voteAccountStatus: VoteAccountInfo[],\n  validatorInfos: ValidatorInfo[],\n  validatorScores: ValidatorScore[],\n  validatorApys: ValidatorApy[],\n  onValidatorMetas: (metas: ValidatorMeta[]) => void,\n  abortSignal: AbortSignal\n  ) {\n  let validatorMetas: ValidatorMeta[] = [];\n  let remainingVoteAccountInfos = [...voteAccountStatus];\n  let remainingValidatorInfos = [...validatorInfos];\n  let remainingValidatorApys = [...validatorApys];\n\n  console.log('scores', validatorScores.length)\n\n  for(let i = 0; i < validatorScores.length; i++) {\n    const validatorScore = validatorScores[i];\n    const voteAccountIndex = remainingVoteAccountInfos.findIndex(info => info.nodePubkey === validatorScore.account);\n    if (voteAccountIndex < 0) {\n      // If score does not match anything then it goes into the no score bucket\n      continue;\n    }\n    const [voteAccountInfo] = remainingVoteAccountInfos.splice(voteAccountIndex, 1);\n\n    const validatorInfoIndex = remainingValidatorInfos.findIndex(validatorInfo => validatorInfo.key.equals(new PublicKey(voteAccountInfo.nodePubkey)));\n    let validatorInfo: ValidatorInfo | undefined;\n    [validatorInfo] = validatorInfoIndex > -1 ? remainingValidatorInfos.splice(validatorInfoIndex, 1) : [];\n\n    const validatorApyIndex = remainingValidatorApys.findIndex(validatorApy => validatorApy.id === voteAccountInfo.nodePubkey);\n    let validatorApy: ValidatorApy | undefined;\n    [validatorApy] = validatorApyIndex > -1 ? remainingValidatorApys.splice(validatorApyIndex, 1) : [];\n\n    validatorMetas.push({\n      voteAccountInfo,\n      validatorInfo,\n      validatorScore,\n      validatorApy\n    });\n\n    if (i % BATCH_SIZE === 0) {\n      await sleep(1);\n      console.log(`batch index: ${i}`);\n      onValidatorMetas([...validatorMetas]);\n    }\n\n    if (abortSignal.aborted) {\n      return;\n    }\n  }\n\n  for(let i = 0; i < remainingVoteAccountInfos.length; i++) {\n    const voteAccountInfo = remainingVoteAccountInfos[i];\n\n    const validatorInfoIndex = remainingValidatorInfos.findIndex(validatorInfo => validatorInfo.key.equals(new PublicKey(voteAccountInfo.nodePubkey)));\n    let validatorInfo: ValidatorInfo | undefined;\n    [validatorInfo] = validatorInfoIndex > -1 ? remainingValidatorInfos.splice(validatorInfoIndex, 1) : [];\n\n    const validatorApyIndex = remainingValidatorApys.findIndex(validatorApy => validatorApy.id === voteAccountInfo.nodePubkey);\n    let validatorApy: ValidatorApy | undefined;\n    [validatorApy] = validatorApyIndex > -1 ? remainingValidatorApys.splice(validatorApyIndex, 1) : [];\n\n    validatorMetas.push({\n      voteAccountInfo,\n      validatorInfo,\n      validatorScore: undefined,\n      validatorApy\n    });\n\n    if (i % BATCH_SIZE === 0) {\n      await sleep(1);\n      console.log(`batch index: ${i}`);\n      onValidatorMetas([...validatorMetas]);\n    }\n\n    if (abortSignal.aborted) {\n      return;\n    }\n  }\n  return validatorMetas;\n}\n\nexport function DelegateDialog(props: {stakePubkey: PublicKey, open: boolean, handleClose: () => void}) {\n  const {stakePubkey, open, handleClose} = props;\n  const sendConnection = useSendConnection();\n  const {wallet} = useWallet();\n  const {monitorTransaction, sending} = useMonitorTransaction();\n  const urlSuffix = useSolanaExplorerUrlSuffix();\n  \n  const [maxComission, setMaxComission] = useState<number>(100);\n\n  const { voteAccountInfos, validatorInfos, validatorScores, validatorApys, totalActivatedStake} = useContext(ValidatorsContext);\n\n  const [validatorMetas, setValidatorMetas] = useState<ValidatorMeta[]>([]);\n  const [filteredValidatorMetas, setFilteredValidatorMetas] = useState<ValidatorMeta[]>([]);\n  const [selectedIndex, setSelectedIndex] = useState<number>();\n  const { validator } = useParams() as any;\n  const [searchCriteria, setSearchCriteria] = useState<string>('');\n\n  // Batched validator meta building\n  // Order is VoteAccountInfo[] order, until validatorScores is available\n  // VoteAccountInfo with no available score go at the bottom of the list\n  useAsyncAbortable(async (abortSignal) => {\n    const validatorMetas = await batchMatcher(\n      voteAccountInfos,\n      validatorInfos,\n      validatorScores,\n      validatorApys,\n      (validatorMetas) => setValidatorMetas(validatorMetas),\n      abortSignal\n    );\n    if (validatorMetas) {\n      setValidatorMetas(validatorMetas);\n    }\n  }, [voteAccountInfos, validatorInfos, validatorScores]);\n\n  useEffect(() => {\n    if(validator) {\n      setSearchCriteria(validator);\n      setSelectedIndex(0);\n    }\n  }, [validator])\n\n  useEffect(() => {\n    setSelectedIndex(undefined);\n    setFilteredValidatorMetas(validatorMetas.filter(meta => {\n      const votePubkeyMatches = searchCriteria ? meta.voteAccountInfo.votePubkey.includes(searchCriteria) : true;\n      const nameMatches = searchCriteria ? meta.validatorInfo?.info.name.toLowerCase().includes(searchCriteria.toLowerCase()) : true;\n\n      return (meta.voteAccountInfo.commission <= maxComission) && (votePubkeyMatches || nameMatches);\n    }));\n  }, [validatorMetas, maxComission, searchCriteria]);\n\n  useEffect(() => {\n    if(selectedIndex !== undefined && selectedIndex >= filteredValidatorMetas.length) {\n      setSelectedIndex(undefined);\n    }\n  }, [filteredValidatorMetas, selectedIndex]);\n\n  return (\n    <Dialog\n      open={open}\n      fullWidth={true}\n      onClose={handleClose}\n      maxWidth=\"lg\"\n    >\n      <DialogTitle>\n        Choose a validator\n      </DialogTitle>\n      <DialogContent>\n        <div>\n          <Typography>\n            Max commission %\n          </Typography>\n          <Slider\n            color=\"secondary\"\n            style={{width: '20%'}}\n            value={maxComission}\n            onChange={(event, newValue) => {setMaxComission(newValue as number)}}\n            aria-labelledby=\"continuous-slider\"\n            step={1}\n            valueLabelDisplay=\"auto\"\n          />\n          <Typography>\n            The top 200 validators in terms of APY offer between 7.0 and 8.1% APY (even with fees)\n          </Typography>\n        </div>\n\n        <TextField\n          title=\"Search\"\n          fullWidth\n          placeholder=\"Name or vote account\"\n          value={searchCriteria}\n          onChange={(e) => {\n            setSearchCriteria(e.target.value);\n          }}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <Button\n                  onClick={() =>\n                    setSearchCriteria('')\n                  }\n                >\n                  Clear\n                </Button>\n              </InputAdornment>\n            ),\n            inputProps: {\n              step: 0.1,\n            },\n          }}\n        />\n\n        <Box m={2} />\n\n        <div style={{height: '60vh'}}>\n          <AutoSizer>\n            {({height, width}) => (\n              <Table\n                width={width}\n                height={height}\n                headerHeight={30}\n                rowHeight={70}\n                rowCount={filteredValidatorMetas.length}\n                rowGetter={({index}) => {\n                  return filteredValidatorMetas[index];\n                }}\n                onRowClick={({index}) => { setSelectedIndex(index) }}\n                rowRenderer={props => {\n                  const className = props.index === selectedIndex ? ' clickedItem': ' item';\n                  return defaultRowRenderer({...props, className: props.className + className});\n                }}\n              >\n                <Column\n                  dataKey=\"validatorInfo\"\n                  width={80}\n                  cellDataGetter={({rowData}) => rowData.validatorInfo?.info?.keybaseUsername ?\n                    `https://keybase.io/${rowData.validatorInfo?.info?.keybaseUsername}/picture`\n                    : IMG_SRC_DEFAULT\n                  }\n                  cellRenderer={(props: TableCellProps) => (\n                    <img\n                      style={{height: \"65px\"}}\n                      src={props.cellData as string}\n                      alt=\"\"\n                    />)\n                  }\n                />\n                <Column\n                  label=\"name or account\"\n                  dataKey=\"name\"\n                  width={240}\n                  headerRenderer={basicHeaderRenderer}\n                  cellDataGetter={({rowData}) => ({votePubkey: rowData.voteAccountInfo.votePubkey, name: rowData.validatorInfo?.info?.name})}\n                  cellRenderer={(props: TableCellProps) => {\n                    return (\n                      <div>\n                        <Typography>\n                          <Link color=\"secondary\" href={`https://explorer.solana.com/address/${props.cellData.votePubkey}${urlSuffix}`} rel=\"noopener noreferrer\" target=\"_blank\">\n                            {props.cellData.name ? props.cellData.name : shortenAddress(props.cellData.votePubkey, 6)}\n                          </Link>\n                        </Typography>\n                      </div>\n                    );\n                  }}\n                />\n                <Column\n                  label=\"Stake (SOL)\"\n                  dataKey=\"activatedStake\"\n                  headerRenderer={basicHeaderRenderer}\n                  cellRenderer={basicCellRenderer}\n                  cellDataGetter={({rowData}) => `${formatPriceNumber.format(rowData.voteAccountInfo.activatedStake / LAMPORTS_PER_SOL)} (${formatPct.format(rowData.voteAccountInfo.activatedStake / totalActivatedStake)})`}\n                  width={180}\n                />\n                <Column\n                  label=\"Fee\"\n                  dataKey=\"commission\"\n                  headerRenderer={basicHeaderRenderer}\n                  cellDataGetter={({rowData}) => `${rowData.voteAccountInfo.commission}%`}\n                  cellRenderer={basicCellRenderer}\n                  width={80}\n                />\n                <Column\n                  label=\"APY\"\n                  dataKey=\"apy\"\n                  headerRenderer={() => {\n                    return (\n                      <Typography>\n                        APY{' '}\n                        <Tooltip title={<Typography>Stakeview.app APY averaged over last 3 epoch</Typography>}>\n                          <Link href=\"https://www.stakeview.app\" rel=\"noopener noreferrer\" target=\"_blank\">\n                            <img className=\"inline\" src=\"stakeviewapp.png\" alt=\"\" style={{verticalAlign: \"middle\", height: \"30px\"}}/>\n                          </Link>\n                        </Tooltip>\n                      </Typography>\n                    )\n                  }}\n                  cellDataGetter={({rowData}) => rowData.validatorApy?.apy ? formatPct.format(rowData.validatorApy.apy) : '-'}\n                  cellRenderer={basicCellRenderer}\n                  width={80}\n                />\n                <Column\n                  label=\"Website\"\n                  dataKey=\"website\"\n                  headerRenderer={basicHeaderRenderer}\n                  cellDataGetter={({rowData}) => rowData.validatorInfo?.info?.website}\n                  cellRenderer={(props: TableCellProps) => {\n                    return (\n                      <Typography>\n                        <Link color=\"secondary\" href={props.cellData} rel=\"noopener noreferrer\" target=\"_blank\">\n                          {props.cellData}\n                        </Link>\n                      </Typography>\n                    );\n                  }}\n                  width={300}\n                />\n                <Column\n                  label=\"Score\"\n                  dataKey=\"validatorScore\"\n                  headerRenderer={() => (\n                    <Typography>\n                      Score (Max 11)\n                      <Link href=\"https://validators.app/faq\" rel=\"noopener noreferrer\" target=\"_blank\">\n                        <img className=\"inline\" src=\"va-logo.png\" alt=\"\" style={{verticalAlign: \"middle\", height: \"20px\"}}/>\n                      </Link>\n                    </Typography>\n                  )}\n                  cellDataGetter={({rowData}) => rowData.validatorScore}\n                  cellRenderer={scoreCellRenderer}\n                  width={170}\n                />\n              </Table>\n            )}\n          </AutoSizer>\n        </div>\n\n        <Box m={2}>\n          {(selectedIndex !== undefined && filteredValidatorMetas[selectedIndex]) && (\n            <Typography variant=\"h6\">\n              Selected {shortenAddress(filteredValidatorMetas[selectedIndex].voteAccountInfo.votePubkey)}\n            </Typography>\n          )}\n        </Box>\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={handleClose}>Close</Button>\n        <Button\n          disabled={selectedIndex === undefined || sending}\n          onClick={async () => {\n            if(!wallet?.publicKey || selectedIndex === undefined || !filteredValidatorMetas[selectedIndex]) {\n              return;\n            }\n\n            const transaction = StakeProgram.delegate({\n              stakePubkey,\n              authorizedPubkey: wallet.publicKey,\n              votePubkey: new PublicKey(filteredValidatorMetas[selectedIndex].voteAccountInfo.votePubkey)\n            });\n\n            await monitorTransaction(\n              sendTransaction(\n                sendConnection,\n                wallet,\n                transaction.instructions,\n                []\n              ),\n              {\n                onSuccess: () => {\n                  handleClose();\n                },\n                onError: () => {}\n              }\n            );\n          }}\n        >\n          {sending ? <CircularProgress color=\"secondary\" size={14} /> : \"Delegate\"}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { Button, CircularProgress, Collapse, Dialog, DialogActions, DialogContent, DialogTitle, InputAdornment, List, ListItem, ListItemText, TextField, Tooltip } from \"@material-ui/core\";\n//import { ExpandLess, ExpandMore, OpenInNew } from \"@material-ui/icons\";\nimport { LAMPORTS_PER_SOL, PublicKey, StakeActivationData, StakeProgram } from \"@solana/web3.js\";\nimport BN from \"bn.js\";\nimport React, { useContext, useEffect, useMemo, useState } from \"react\";\nimport { sendTransaction, useConnection, useSendConnection, useSolanaExplorerUrlSuffix } from \"../contexts/connection\";\nimport { EpochContext } from \"../contexts/epoch\";\nimport { useWallet } from \"../contexts/wallet\";\nimport { getFirstBlockTime } from \"../utils/block\";\nimport { useMonitorTransaction } from \"../utils/notifications\";\nimport { StakeAccountMeta } from \"../utils/stakeAccounts\";\nimport { formatPct, shortenAddress } from \"../utils/utils\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { DelegateDialog } from \"./DelegateDialog\";\nimport { WalletAdapter } from \"../wallet-adapters/walletAdapter\";\n\nconst MAX_EPOCH = new BN(2).pow(new BN(64)).sub(new BN(1));\n\nexport function StakeAccountCard({stakeAccountMeta}: {stakeAccountMeta: StakeAccountMeta}) {\n  const connection = useConnection();\n  const sendConnection = useSendConnection();\n  const {wallet, connected} = useWallet();\n  const {monitorTransaction} = useMonitorTransaction();\n  const urlSuffix = useSolanaExplorerUrlSuffix();\n  const { epochSchedule, epochStartTime } = useContext(EpochContext);\n\n  const [rewardsOpen, setRewardsOpen] = useState(false);\n  const [delegateOpen, setDelegateOpen] = useState(false);\n  const [stakeActivationData, setStakeActivationData] = useState<StakeActivationData>();\n  const [withdrawOpen, setWithdrawOpen] = useState(false);\n  const [activatedBlockTime, setActivatedBlockTime] = useState<number>();\n\n  const [isCopied, setIsCopied] = useState(false);\n\n  function formatEpoch(epoch: BN) {\n    return epoch.eq(MAX_EPOCH) ? '-' : epoch.toString();\n  }\n\n  useEffect(() => {\n    console.log(`${(connection as any)._rpcEndpoint}, ${stakeAccountMeta.address.toBase58()}`);\n    connection.getStakeActivation(stakeAccountMeta.address)\n      .then(setStakeActivationData)\n      .catch(error => {\n        console.log(`Failed: ${error}`);\n        setStakeActivationData(undefined);\n      });\n    // Hidden dependency as we update only the underlying data\n    // eslint-disable-next-line\n  }, [connection, stakeAccountMeta, stakeAccountMeta.stakeAccount]);\n\n  const totalRewards = useMemo(() => {\n    return stakeAccountMeta.inflationRewards.reduce((sum, current) => sum + current.amount, 0)\n  }, [stakeAccountMeta]);\n\n  useEffect(() => {\n    setActivatedBlockTime(undefined);\n    if(!stakeAccountMeta.stakeAccount.info.stake || !epochSchedule) {\n      return;\n    }\n\n    const firstActivatedSlot = epochSchedule.getFirstSlotInEpoch(\n      stakeAccountMeta.stakeAccount.info.stake.delegation.activationEpoch.toNumber() + 1\n    );\n    getFirstBlockTime(connection, firstActivatedSlot)\n      .then(setActivatedBlockTime);\n  }, [connection, stakeAccountMeta, epochSchedule]);\n\n  const APR = useMemo(() => {\n    const initialStake = stakeAccountMeta.lamports - totalRewards;\n    if(!epochStartTime || !activatedBlockTime) {\n      return;\n    }\n\n    const timePeriod = epochStartTime - activatedBlockTime;\n    console.log(`timePeriod: ${timePeriod}, epochStartTime: ${epochStartTime}, activatedBlockTime: ${activatedBlockTime}`);\n    return totalRewards / initialStake / timePeriod * 365 * 24 * 60 * 60;\n  }, [stakeAccountMeta, totalRewards, epochStartTime, activatedBlockTime])\n\n  const voteAccountAddress = useMemo(() => {\n    return stakeAccountMeta.stakeAccount.info.stake?.delegation.voter\n  }, [stakeAccountMeta])\n  \n  return (\n    <div className=\"bg-transparent w-full font-light pb-3\">\n      <div className=\"solBoxGray rounded-b-none rounded-t-lg w-full bg-white uppercase flex flex-wrap md:justify-between items-center text-center md:text-left\" style={{borderBottomLeftRadius: 0, borderBottomRightRadius: 0}}>\n        {/* Seed account info */}\n        <div className=\"w-full pb-3 pt-3 md:pt-0 md:pb-0 md:w-3/12 md:pl-5 whitespace-nowrap\">\n          <span className=\"text-sm leading-6\">SEED {stakeAccountMeta.seed}</span><br />\n          <span className=\"text-lg font-bold leading-3\">{stakeAccountMeta.lamports / LAMPORTS_PER_SOL} SOL</span><br />\n          {/* <span className=\"text-xs leading-none\">$X</span> */}\n        </div>\n        <div className=\"w-full pb-3 md:pb-0 md:w-2/12 md:pl-5 whitespace-nowrap leading-5\">\n          <p>State: <span className=\"font-bold\">{stakeActivationData?.state}</span></p>\n          <p>Type: <span className=\"font-bold\">{stakeAccountMeta.stakeAccount.type}</span></p>\n        </div>\n        <div className=\"w-full m-2 pb-6 md:pb-0 md:w-3/12 md:pl-5 whitespace-nowrap leading-5\">\n          {stakeAccountMeta.stakeAccount.info.stake && (\n            <>\n              <p>Validator:{' '}\n                <a\n                  href={`https://explorer.solana.com/address/${voteAccountAddress?.toBase58()}${urlSuffix}`}\n                  rel=\"noopener noreferrer\" target=\"_blank\"\n                  className=\"font-bold\"\n                >\n                  {shortenAddress(voteAccountAddress?.toBase58() ?? '')}\n                </a>\n              </p>\n              <p>Activation Epoch: <span className=\"font-bold\">{formatEpoch(stakeAccountMeta.stakeAccount.info.stake.delegation.activationEpoch)}</span></p>\n              <p>Deactivation Epoch: <span className=\"font-bold\">{formatEpoch(stakeAccountMeta.stakeAccount.info.stake.delegation.deactivationEpoch)}</span></p>\n            </>\n          )}\n        </div>\n        {/* Stake accounts - always visible */}\n        <div className=\"w-full pb-5 md:pb-2 md:pt-2 md:w-3/12 md:pr-10 md:text-right\">\n          {connected &&\n            <>\n              <button\n                className=\"solBtnGray whitespace-nowrap\"\n                hidden={stakeActivationData?.state === \"active\" || stakeActivationData?.state === \"deactivating\"}\n                onClick={() => setDelegateOpen(true)}\n                disabled={!connected}\n              >\n                {stakeActivationData?.state === \"activating\" && \"Re-\"}Delegate\n              </button>\n\n              <button\n                className=\"solBtnGray whitespace-nowrap\"\n                hidden={stakeActivationData?.state === \"inactive\" || stakeActivationData?.state === \"deactivating\"}\n                onClick={async () => {\n                  if(!wallet?.publicKey) {\n                    return;\n                  }\n\n                  const transaction = StakeProgram.deactivate({\n                    stakePubkey: stakeAccountMeta.address,\n                    authorizedPubkey: wallet.publicKey,\n                  });\n\n                  await monitorTransaction(\n                    sendTransaction(\n                      sendConnection,\n                      wallet,\n                      transaction.instructions,\n                      []\n                    ),\n                    {\n                      onSuccess: () => {},\n                      onError: () => {}\n                    }\n                  );\n                }} \n                disabled={!connected}\n              >\n                Deactivate\n              </button>\n\n              <button\n                className=\"solBtnGray whitespace-nowrap\"\n                hidden={stakeActivationData?.state !== \"inactive\"}\n                onClick={() => {\n                  setWithdrawOpen(true);\n                }}\n              >\n                Withdraw\n              </button>\n            </>\n          }\n\n          {wallet?.publicKey && withdrawOpen && (\n            <WithdrawDialog\n              wallet={wallet}\n              userPublicKey={wallet.publicKey}\n              stakePubkey={stakeAccountMeta.address}\n              stakeAccountLamports={stakeAccountMeta.lamports}\n              handleClose={() => {\n                setWithdrawOpen(false);\n              }}\n            />\n          )}\n          {delegateOpen && \n            <DelegateDialog\n              stakePubkey={stakeAccountMeta.address}\n              open={delegateOpen}\n              handleClose={() => {\n                setDelegateOpen(false);\n              }}\n            />\n          }\n\n          {/* External button */}\n          <a className=\"solBtnGray pb-0.5 whitespace-nowrap cursor-pointer\" href={`https://explorer.solana.com/address/${stakeAccountMeta.address?.toBase58()}${urlSuffix}`} rel=\"noopener noreferrer\" target=\"_blank\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mb-0.5 inline-block\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" />\n            </svg>\n          </a>\n\n          <CopyToClipboard text={stakeAccountMeta.address.toBase58()}\n              onCopy={() => {\n                setIsCopied(true)\n                setTimeout(() => {\n                  setIsCopied(false)\n                }, 1000)\n              }}\n            >\n            <Tooltip\n              title={isCopied\n                ? 'Copied'\n                : 'Copy to clipboard'\n              }\n            >\n              <button className=\"m-2 font-mono\" style={{direction: 'rtl'}}>\n                <p>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mb-0.5 inline-block\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2\" />\n                  </svg>\n                  {shortenAddress(stakeAccountMeta.address.toBase58())}\n                </p>\n              </button>\n            </Tooltip>\n          </CopyToClipboard>\n        </div>\n      </div>\n\n      <div className=\"w-full\">\n        <div className=\"w-full\">\n          <ul className=\"shadow-box\">   \n            <li className=\"relative\">\n              <button\n                type=\"button\"\n                className=\"w-full solBtnRewards uppercase font-light focus:outline-none\"\n                onClick={() => setRewardsOpen(!rewardsOpen)}\n                style={{backgroundColor: '#D5E300'}}\n              >\n                <div className=\"flex items-center justify-between\">\n                  <span>\n                    <span className=\"ml-4\">Rewards </span>\n                    <span className=\"font-normal\">{totalRewards / LAMPORTS_PER_SOL} SOL </span>\n                    <span className=\"text-xs\">{(APR && formatPct.format(APR)) || '-'} APR </span>\n                  </span>\n                  <span className=\"ico-plus\" hidden={stakeAccountMeta.inflationRewards.length === 0}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n                    </svg>\n                  </span>\n                </div>\n              </button>\n              {/* Dropdown hidden area */}\n              <div className=\"relative transition-all duration-700\">\n                <Collapse in={rewardsOpen} timeout=\"auto\" unmountOnExit>\n                  <List component=\"div\" disablePadding>\n                    {stakeAccountMeta.inflationRewards.map(inflationReward => (\n                      <ListItem style={{paddingLeft: 4}} key={inflationReward.epoch}>\n                        <ListItemText primary={`Epoch: ${inflationReward.epoch}, reward: ${inflationReward.amount / LAMPORTS_PER_SOL} SOL`} />\n                      </ListItem>\n                    ))}\n                  </List>\n                </Collapse>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\ninterface WithdrawDialogProps {\n  wallet: WalletAdapter;\n  userPublicKey: PublicKey;\n  stakePubkey: PublicKey;\n  stakeAccountLamports: number;\n  handleClose: () => void;\n};\n\nfunction WithdrawDialog({wallet, userPublicKey, stakePubkey, stakeAccountLamports, handleClose}: WithdrawDialogProps) {\n  const sendConnection = useSendConnection();\n  const {monitorTransaction, sending} = useMonitorTransaction();\n\n  const [amount, setAmount] = useState('');\n  const max = useMemo(() => {\n    return stakeAccountLamports / LAMPORTS_PER_SOL;\n  }, [stakeAccountLamports]);\n\n  return (\n    <Dialog\n      open\n      onClose={handleClose}\n    >\n      <DialogTitle>\n        Withdraw from inactive stake account\n      </DialogTitle>\n      <DialogContent>\n        <TextField\n          placeholder=\"SOL\"\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <Button\n                  onClick={() => \n                    setAmount(max.toString())\n                  }\n                >\n                  MAX\n                </Button>\n                SOL\n              </InputAdornment>\n            ),\n            inputProps: {\n              step: 0.1,\n            },\n          }}\n          value={amount}\n          onChange={e => {\n            setAmount(e.target.value);\n          }}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Close</Button>\n        <Button\n          disabled={sending}\n          onClick={async () => {\n            await monitorTransaction(\n              sendTransaction(\n                sendConnection,\n                wallet,\n                StakeProgram.withdraw({\n                  stakePubkey,\n                  authorizedPubkey: userPublicKey,\n                  toPubkey: userPublicKey,\n                  lamports: Number(amount) * LAMPORTS_PER_SOL,\n                }).instructions,\n                []\n              ),\n              {\n                onSuccess: () => {\n                  handleClose();\n                },\n                onError: () => {}\n              }\n            );\n          }}\n        >\n          {sending ?\n            <CircularProgress color=\"secondary\" size={14} />\n            : \"Withdraw\"\n          }\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M381.957 73.2101C382.255 72.0602 382.425 71.0381 382.425 70.1011C382.425 66.3959 380.002 64.5646 375.156 64.5646H291.122C280.453 64.5646 270.55 67.631 261.368 73.7637C252.187 79.8965 246.449 87.307 244.154 95.9525C243.473 98.4226 243.176 100.808 243.176 103.065C243.176 108.772 245.301 113.797 249.552 118.184C255.418 124.317 263.706 127.383 274.333 127.383H328.825C331.97 127.383 334.436 128.277 336.179 130.109C337.369 131.429 338.006 132.962 338.006 134.666C338.006 135.39 337.879 136.156 337.624 136.923C336.901 139.606 335.201 141.863 332.481 143.694C329.803 145.568 326.87 146.463 323.724 146.463H239.69C233.655 146.463 229.829 149.359 228.256 155.108L227.066 159.665C226.769 160.815 226.599 161.837 226.599 162.774C226.599 166.479 229.021 168.311 233.867 168.311H317.901C328.57 168.311 338.474 165.244 347.655 159.112C356.836 152.979 362.575 145.568 364.87 136.923C365.55 134.495 365.89 132.153 365.89 129.896C365.89 124.189 363.765 119.121 359.514 114.692C353.648 108.559 345.36 105.492 334.733 105.492H280.198C277.053 105.492 274.63 104.555 272.93 102.681C271.655 101.404 271.017 99.9132 271.017 98.2097C271.017 97.4857 271.145 96.7191 271.4 95.9525C272.08 93.2694 273.78 91.0122 276.5 89.1809C279.221 87.3495 282.154 86.4126 285.299 86.4126H369.333C375.369 86.4126 379.152 83.5166 380.682 77.7671L381.957 73.2101Z\",\n  fill: \"white\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M520.569 94.4193C520.569 87.3921 517.891 81.1742 512.578 75.7654C505.267 68.3124 495.023 64.5646 481.888 64.5646H445.546C432.412 64.5646 420.17 68.3124 408.863 75.7654C397.557 83.2184 390.501 92.2472 387.696 102.809L380.342 130.109C379.534 133.005 379.152 135.816 379.152 138.499C379.152 145.526 381.83 151.744 387.143 157.152C394.454 164.606 404.698 168.353 417.832 168.353H454.175C467.309 168.353 479.551 164.606 490.857 157.152C502.164 149.699 509.22 140.671 512.025 130.109L519.379 102.809C520.186 99.8706 520.569 97.1024 520.569 94.4193ZM492.132 102.809L484.779 130.109C483.546 134.666 480.571 138.541 475.725 141.693C470.922 144.887 465.651 146.463 459.955 146.463H423.613C417.917 146.463 413.539 144.844 410.436 141.65C408.141 139.393 406.993 136.752 406.993 133.729C406.993 132.579 407.163 131.344 407.546 130.109L414.899 102.809C416.089 98.2523 419.107 94.3767 423.953 91.2251C428.756 88.031 434.027 86.4552 439.723 86.4552H476.065C481.761 86.4552 486.181 88.031 489.327 91.1825C491.58 93.4823 492.685 96.1654 492.685 99.1892C492.685 100.297 492.472 101.532 492.132 102.809Z\",\n  fill: \"white\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M575.869 42.8017C575.869 39.0965 573.446 37.2651 568.6 37.2651H559.504C553.468 37.2651 549.643 40.1612 548.155 45.9106L517.721 159.665C517.423 160.815 517.253 161.837 517.253 162.774C517.253 166.479 519.676 168.311 524.522 168.311H533.618C539.654 168.311 543.48 165.415 544.967 159.665L575.401 45.9106C575.741 44.7608 575.869 43.7386 575.869 42.8017Z\",\n  fill: \"white\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M720.941 73.2101C721.238 72.0602 721.408 71.0381 721.408 70.1011C721.408 66.3959 718.985 64.5646 714.14 64.5646H630.106C619.437 64.5646 609.533 67.631 600.352 73.7637C591.171 79.8965 585.432 87.307 583.137 95.9525C582.457 98.4226 582.159 100.808 582.159 103.065C582.159 108.772 584.285 113.797 588.535 118.184C594.401 124.317 602.69 127.383 613.316 127.383H667.809C670.954 127.383 673.419 128.277 675.162 130.109C676.352 131.429 676.99 132.962 676.99 134.666C676.99 135.39 676.862 136.156 676.607 136.923C675.885 139.606 674.184 141.863 671.464 143.694C668.786 145.568 665.853 146.463 662.708 146.463H578.674C572.638 146.463 568.812 149.359 567.24 155.108L566.05 159.665C565.752 160.815 565.582 161.837 565.582 162.774C565.582 166.479 568.005 168.311 572.851 168.311H656.884C667.553 168.311 677.457 165.244 686.639 159.112C695.82 152.979 701.558 145.568 703.853 136.923C704.533 134.495 704.831 132.153 704.831 129.896C704.831 124.189 702.706 119.121 698.455 114.692C692.589 108.559 684.301 105.492 673.674 105.492H619.182C616.036 105.492 613.614 104.555 611.913 102.681C610.638 101.404 610.001 99.9132 610.001 98.2097C610.001 97.4857 610.128 96.7191 610.383 95.9525C611.063 93.2694 612.763 91.0122 615.484 89.1809C618.204 87.3495 621.137 86.4126 624.283 86.4126H708.317C714.352 86.4126 718.178 83.5166 719.666 77.7671L720.941 73.2101Z\",\n  fill: \"white\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M758.261 86.4125H780.959C786.995 86.4125 790.821 83.5165 792.308 77.767L793.584 73.21C793.881 72.0601 794.051 71.038 794.051 70.101C794.051 66.3958 791.628 64.5645 786.783 64.5645H764.084L769.1 45.9106C769.398 44.7608 769.568 43.7386 769.568 42.8017C769.568 39.0965 767.145 37.2651 762.299 37.2651H753.203C747.167 37.2651 743.342 40.1612 741.854 45.9106L719.326 130.109C718.561 133.005 718.136 135.815 718.136 138.499C718.136 145.526 720.814 151.744 726.127 157.152C733.438 164.605 743.682 168.353 756.816 168.353H759.069C765.105 168.353 768.93 165.457 770.418 159.708L771.608 155.151C771.906 153.916 772.076 152.894 772.076 151.957C772.076 148.337 769.695 146.505 764.892 146.505H762.639C756.944 146.505 752.565 144.887 749.463 141.693C747.167 139.435 746.02 136.795 746.02 133.771C746.02 132.621 746.19 131.386 746.572 130.151L758.261 86.4125Z\",\n  fill: \"white\"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M932.237 94.4193C932.237 87.3921 929.56 81.1742 924.246 75.7654C916.935 68.3124 906.692 64.5646 893.557 64.5646H818.62C812.584 64.5646 808.758 67.4606 807.271 73.2101L805.995 77.7671C805.698 78.917 805.528 79.9391 805.528 80.8761C805.528 84.5813 807.951 86.4126 812.796 86.4126H887.734C893.43 86.4126 897.85 87.9884 900.996 91.1399C903.249 93.4397 904.354 96.1228 904.354 99.1466C904.354 100.297 904.184 101.532 903.801 102.767L903.079 105.492H837.237C826.568 105.492 816.664 108.559 807.441 114.692C798.217 120.824 792.478 128.235 790.183 136.88C789.503 139.308 789.163 141.65 789.163 143.907C789.163 149.614 791.331 154.682 795.624 159.112C801.49 165.244 809.778 168.311 820.405 168.311H865.843C878.978 168.311 891.219 164.563 902.526 157.11C913.832 149.657 920.888 140.628 923.694 130.066L931.047 102.767C931.812 99.8706 932.237 97.1024 932.237 94.4193ZM896.448 130.109C895.215 134.666 892.24 138.541 887.394 141.693C882.548 144.844 877.32 146.463 871.624 146.463H826.186C823.04 146.463 820.617 145.526 818.917 143.652C817.642 142.374 817.004 140.884 817.004 139.18C817.004 138.456 817.132 137.689 817.387 136.923C818.11 134.24 819.81 131.983 822.53 130.151C825.25 128.32 828.141 127.383 831.286 127.383H897.128L896.448 130.109Z\",\n  fill: \"white\"\n});\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M1084.28 73.21C1084.58 72.0601 1084.75 71.038 1084.75 70.101C1084.75 66.3958 1082.33 64.5645 1077.48 64.5645H1072.93C1069.53 64.5645 1063.5 66.1403 1054.78 69.2919L973.553 96.5061L987.07 45.9106C987.367 44.7608 987.537 43.7386 987.537 42.8017C987.537 39.0965 985.115 37.2651 980.269 37.2651H971.173C965.137 37.2651 961.311 40.1612 959.824 45.9106L929.389 159.665C929.092 160.815 928.922 161.837 928.922 162.774C928.922 166.479 931.345 168.311 936.19 168.311H945.287C951.322 168.311 955.148 165.415 956.636 159.665L962.884 136.369L1029.58 163.583C1036.59 166.735 1041.82 168.311 1045.22 168.311H1049.77C1055.8 168.311 1059.63 165.415 1061.11 159.58C1061.37 158.728 1061.5 157.962 1061.5 157.195C1061.5 154.725 1060.22 152.723 1057.67 151.19L978.484 116.438L1076.33 81.6C1080.58 79.7261 1083.26 76.9152 1084.28 73.21Z\",\n  fill: \"white\"\n});\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M1110.63 127.383H1176.48C1187.14 127.383 1197.05 124.317 1206.23 118.184C1215.41 112.051 1221.19 104.641 1223.53 95.9951C1224.21 93.5675 1224.51 91.2251 1224.51 88.9679C1224.51 83.261 1222.38 78.193 1218.13 73.7637C1212.18 67.631 1203.89 64.5646 1193.22 64.5646H1147.83C1134.69 64.5646 1122.45 68.3124 1111.14 75.7654C1099.84 83.2184 1092.78 92.2472 1089.98 102.809L1082.62 130.109C1081.86 133.005 1081.43 135.816 1081.43 138.499C1081.43 145.526 1084.11 151.744 1089.42 157.152C1096.73 164.606 1106.98 168.353 1120.11 168.353H1195.05C1201.09 168.353 1204.91 165.457 1206.4 159.708L1207.59 155.151C1207.89 153.916 1208.06 152.894 1208.06 151.957C1208.06 148.337 1205.68 146.505 1200.87 146.505H1125.98C1120.28 146.505 1115.9 144.887 1112.8 141.693C1110.51 139.436 1109.36 136.795 1109.36 133.771C1109.36 132.621 1109.53 131.386 1109.91 130.151L1110.63 127.383ZM1117.27 102.809C1118.5 98.2523 1121.47 94.3767 1126.32 91.2251C1131.12 88.031 1136.39 86.4552 1142.09 86.4552H1187.53C1190.67 86.4552 1193.1 87.3495 1194.8 89.1809C1195.99 90.5011 1196.62 92.0769 1196.62 93.823C1196.62 94.547 1196.54 95.2711 1196.37 95.9951C1195.65 98.6782 1193.95 100.935 1191.23 102.767C1188.5 104.598 1185.61 105.535 1182.47 105.535H1116.63L1117.27 102.809Z\",\n  fill: \"white\"\n});\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M1241.81 146.463H1232.71C1226.67 146.463 1222.85 149.359 1221.28 155.108L1220.09 159.665C1219.79 160.815 1219.62 161.837 1219.62 162.774C1219.62 166.479 1222.04 168.311 1226.89 168.311H1235.98C1242.02 168.311 1245.85 165.415 1247.33 159.665L1248.52 155.108C1248.82 153.873 1248.99 152.851 1248.99 151.914C1248.99 148.294 1246.57 146.463 1241.81 146.463Z\",\n  fill: \"white\"\n});\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M1311.81 70.1437C1311.81 66.4385 1309.39 64.6072 1304.55 64.6072H1295.45C1289.41 64.6072 1285.59 67.5032 1284.1 73.2527L1260.93 159.708C1260.64 160.858 1260.47 161.88 1260.47 162.817C1260.47 166.522 1262.89 168.353 1267.74 168.353H1276.83C1282.87 168.353 1286.69 165.457 1288.18 159.708L1311.35 73.2527C1311.69 72.0602 1311.81 71.0381 1311.81 70.1437Z\",\n  fill: \"white\"\n});\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M1296.94 59.1131H1306.03C1312.07 59.1131 1315.89 56.2171 1317.47 50.4676L1318.66 45.9106C1318.95 44.7607 1319.12 43.7386 1319.12 42.8017C1319.12 39.0965 1316.7 37.2651 1311.86 37.2651H1302.76C1296.72 37.2651 1292.9 40.1612 1291.41 45.9106L1290.22 50.4676C1289.92 51.7027 1289.75 52.7248 1289.75 53.6618C1289.75 57.2818 1292.13 59.1131 1296.94 59.1131Z\",\n  fill: \"white\"\n});\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M1442.01 75.7654C1434.7 68.3124 1424.45 64.5646 1411.32 64.5646H1374.98C1361.84 64.5646 1349.6 68.3124 1338.3 75.7654C1326.99 83.2184 1319.93 92.2472 1317.13 102.809L1309.77 130.109C1309.01 133.005 1308.58 135.816 1308.58 138.499C1308.58 145.526 1311.26 151.744 1316.57 157.152C1323.89 164.606 1334.13 168.353 1347.26 168.353H1383.61C1396.74 168.353 1408.98 164.606 1420.29 157.152C1431.6 149.699 1438.65 140.671 1441.46 130.109L1448.81 102.809C1449.58 99.9132 1450 97.1024 1450 94.4193C1450 87.3921 1447.32 81.1742 1442.01 75.7654ZM1421.56 102.809L1414.21 130.109C1412.98 134.666 1410 138.541 1405.16 141.693C1400.31 144.844 1395.08 146.463 1389.39 146.463H1353.04C1347.35 146.463 1342.97 144.844 1339.87 141.65C1337.57 139.393 1336.42 136.752 1336.42 133.729C1336.42 132.579 1336.59 131.344 1336.98 130.109L1344.33 102.809C1345.56 98.2523 1348.54 94.3767 1353.38 91.2251C1358.19 88.031 1363.46 86.4552 1369.15 86.4552H1405.5C1411.19 86.4552 1415.61 88.031 1418.76 91.1825C1421.01 93.4823 1422.12 96.1654 1422.12 99.1892C1422.12 100.297 1421.9 101.532 1421.56 102.809Z\",\n  fill: \"white\"\n});\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M29.7966 137.775C24.4408 127 21.4229 114.862 21.4229 102C21.4229 57.58 57.5103 21.4221 101.844 21.4221C114.681 21.4221 126.795 24.4459 137.549 29.8121L157.611 16.6948C141.544 6.17537 122.374 0 101.801 0C45.6512 0 0 45.7403 0 102C0 122.613 6.16334 141.82 16.7048 157.876L29.7966 137.775Z\",\n  fill: \"white\"\n});\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M186.898 46.1234L173.806 66.2253C179.162 77.0002 182.18 89.138 182.18 102C182.18 146.42 146.092 182.578 101.759 182.578C88.9221 182.578 76.8079 179.554 66.0539 174.188L45.9912 187.305C62.0159 197.867 81.186 204.042 101.759 204.042C157.909 204.042 203.56 158.302 203.56 102.042C203.603 81.3869 197.439 62.1794 186.898 46.1234Z\",\n  fill: \"white\"\n});\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M80.9312 163.072C87.477 165.33 94.4905 166.565 101.801 166.565C137.379 166.565 166.24 137.647 166.24 102C166.24 94.6749 165.008 87.6478 162.755 81.0891L80.9312 163.072Z\",\n  fill: \"white\"\n});\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M37.4053 102C37.4053 109.325 38.6379 116.353 40.8907 122.911L122.714 40.9279C116.168 38.6707 109.155 37.4357 101.844 37.4357C66.2242 37.4783 37.4053 66.3534 37.4053 102Z\",\n  fill: \"white\"\n});\n\nvar _ref18 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M67.9666 156.94L68.3917 156.684L156.379 68.5254L156.634 68.0995L166.07 53.6193L178.312 34.8377L196.037 7.58093L168.875 25.3404L150.088 37.606L135.636 47.0607L135.211 47.3588L47.2663 135.475L46.9688 135.901L37.5325 150.381L25.2908 169.205L7.56592 196.419L34.7696 178.66L53.5147 166.394L67.9666 156.94Z\",\n  fill: \"white\"\n});\n\nfunction SvgLogoWhite(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 1450 205\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17, _ref18);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogoWhite);\nexport default __webpack_public_path__ + \"static/media/logo-white.3c891f2a.svg\";\nexport { ForwardRef as ReactComponent };","import { Dialog, Box, Button, DialogActions, DialogContent, DialogTitle, Typography, Link } from \"@material-ui/core\";\n\n\nexport default function HelpDialog(props: {open: boolean, handleClose: () => void}) {\n  const {open, handleClose} = props;\n\n  return (\n    <Dialog\n    fullWidth={true}\n    open={open}\n    onClose={handleClose}\n  >\n    <DialogTitle>\n      <Typography variant=\"h4\">\n        How to use solstake?\n      </Typography>\n    </DialogTitle>\n\n    <DialogContent>\n      <Box m={1}>\n        <Typography>\n          Enter you wallet public key (Stake account authority) or connect your wallet to view your stake accounts, balances, rewards and much more\n        </Typography>\n        <Typography>\n          For in-depth staking documentation about solana staking head to <Link color=\"secondary\" href=\"https://docs.solana.com/staking\" target=\"_blank\">Solana staking documentation</Link>\n        </Typography>\n\n        <Box m={2} />\n\n        <Typography variant=\"h5\">\n          What you can do\n        </Typography>\n        <Typography>\n          Create stake accounts, delegate to validators, unstake, check your rewards... All from any popular wallet: solflare, sollet, phantom, ledger...\n        </Typography>\n\n        <Box m={2} />\n        \n        <Typography>\n          We'd love to hear from you - please send any feedback or suggestions to solstakeio@gmail.com\n        </Typography>\n      </Box>\n    </DialogContent>\n\n    <DialogActions>\n      <Button onClick={handleClose} color=\"primary\">\n        Close\n      </Button>\n    </DialogActions>\n  </Dialog>\n  );\n}","import { Connection, EpochInfo } from \"@solana/web3.js\";\n\nexport interface DashboardEpochInfo {\n  epochInfo: EpochInfo;\n  epochProgress: number;\n  epochTimeRemaining: number;\n}\n\nexport async function getDashboardEpochInfo(connection: Connection) : Promise<DashboardEpochInfo> {\n  // Inspired from explorer.solana.com DashboardInfo\n  const epochInfo = await connection.getEpochInfo();\n  const {slotIndex, slotsInEpoch} =  epochInfo;\n\n  const epochProgress = slotIndex / slotsInEpoch;\n\n  //const samples = await connection.getRecentPerformanceSamples(360);\n  const samples = [{samplePeriodSecs: 550, numSlots: 1000}] // Hardcoded until mystery above is solved\n  const timePerSlotSamples = samples\n    .filter((sample) => {\n      return sample.numSlots !== 0;\n    })\n    .slice(0, 60)\n    .map((sample) => {\n      return sample.samplePeriodSecs / sample.numSlots;\n    })\n\n  const samplesInHour = timePerSlotSamples.length < 60 ? timePerSlotSamples.length : 60;\n  const avgSlotTime_1h =\n    timePerSlotSamples.reduce((sum: number, cur: number) => {\n      return sum + cur;\n    }, 0) / samplesInHour;\n\n  const hourlySlotTime = Math.round(1000 * avgSlotTime_1h);\n  const epochTimeRemaining = (slotsInEpoch - slotIndex) * hourlySlotTime;\n\n  console.log(`epochProgress: ${epochProgress}, epochTimeRemaining: ${epochTimeRemaining}`);\n  return {\n    epochInfo,\n    epochProgress,\n    epochTimeRemaining,\n  };\n}","import { useEffect, useState } from 'react';\nimport { useConnection } from '../contexts/connection';\nimport { DashboardEpochInfo, getDashboardEpochInfo } from '../utils/epoch';\nimport { formatPct, humanizeDuration } from '../utils/utils';\n\nexport default function Epoch() {\n  const connection = useConnection();\n  const [dashboardEpochInfo, setDashboardEpochInfo] = useState<DashboardEpochInfo | null>();\n\n  useEffect(() => {\n    setDashboardEpochInfo(null);\n    async function update() {\n      setDashboardEpochInfo(\n        await getDashboardEpochInfo(connection)\n      );\n    }\n    update();\n\n    const id = setInterval(update, 30000)\n    return () => clearInterval(id);\n  }, [connection]);\n\n  return (\n    <div className=\"h-full w-full mb-3 solBoxBlue\">\n      <div className=\"p-5\">\n        <p className='text-3xl uppercase'>Epoch {dashboardEpochInfo?.epochInfo.epoch}</p>\n      </div>\n      {/* Progress bar */}\n      <p className=\"pb-2 text-xl\">{dashboardEpochInfo?.epochProgress && formatPct.format(dashboardEpochInfo.epochProgress)}</p>\n      <div className=\"mx-5 mb-2 bg-white rounded-full\">\n        <div className=\"shadow w-full bg-grey-light\">\n          <div className=\"bg-solacid rounded-full text-xs leading-none border-4 border-white py-1 text-center text-solblue-dark\" style={{width: dashboardEpochInfo?.epochProgress && formatPct.format(dashboardEpochInfo.epochProgress)}}></div>\n        </div>\n      </div>\n      <p className=\"pb-3 text-xs text-solgray-light\">estimated time remaining{' '}\n        <span className=\"font-bold\">\n          {dashboardEpochInfo?.epochTimeRemaining && humanizeDuration.humanize(dashboardEpochInfo?.epochTimeRemaining)}\n        </span>\n      </p>\n    </div>\n  );\n}\n","import { AccountInfo } from \"@solana/web3.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useConnection } from \"./connection\";\nimport { useWallet } from \"./wallet\";\n\nexport interface Accounts {\n  systemProgramAccountInfo: AccountInfo<Buffer> | null\n};\n\nexport const AccountsContext = React.createContext<Accounts>({systemProgramAccountInfo: null});\n\nexport function AccountsProvider({ children = null as any }) {\n  const connection = useConnection();\n  const { publicKey } = useWallet();\n\n  const [systemProgramAccountInfo, setSystemProgramAccountInfo] = useState<AccountInfo<Buffer> | null>(null);\n\n  useEffect(() => {\n    if(!publicKey) {\n      setSystemProgramAccountInfo(null);\n      return;\n    }\n    connection.getAccountInfo(publicKey)\n      .then(accountInfo => {\n        setSystemProgramAccountInfo(accountInfo);\n      });\n    const subscriptionId = connection.onAccountChange(publicKey, accountInfo => {\n      setSystemProgramAccountInfo(accountInfo);\n    });\n    return () => { connection.removeAccountChangeListener(subscriptionId) };\n  }, [connection, publicKey]);\n\n  return (\n    <AccountsContext.Provider\n      value={{\n        systemProgramAccountInfo,\n      }}\n    >\n      {children}\n    </AccountsContext.Provider>\n  );\n}\n","import { Button, CircularProgress, Dialog, DialogActions, DialogContent, DialogTitle, InputAdornment, TextField, Typography } from \"@material-ui/core\";\nimport { Authorized, Connection, LAMPORTS_PER_SOL, PublicKey, StakeProgram } from \"@solana/web3.js\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { AccountsContext } from \"../contexts/accounts\";\nimport { sendTransaction } from \"../contexts/connection\";\nimport { useMonitorTransaction } from \"../utils/notifications\";\nimport { WalletAdapter } from \"../wallet-adapters/walletAdapter\";\n\ninterface CreateStakeAccountProps {\n  seed: string;\n  open: boolean;\n  setOpen: (open: boolean) => void;\n  wallet: WalletAdapter;\n  connection: Connection;\n  sendConnection: Connection;\n  onSuccess: () => void;\n};\n  \nexport function CreateStakeAccountDialog({seed, open, setOpen, wallet, connection, sendConnection, onSuccess}: CreateStakeAccountProps) {\n  const {monitorTransaction, sending} = useMonitorTransaction();\n  const {systemProgramAccountInfo} = useContext(AccountsContext);\n\n  const [error, setError] = useState<string | null>(null)\n  const [amount, setAmount] = useState<string>('');\n\n  useEffect(() => {\n    if (Number(amount) > (systemProgramAccountInfo?.lamports ?? 0) / LAMPORTS_PER_SOL) {\n      setError('Insufficient SOL balance');\n    }\n    else {\n      setError(null);\n    }\n  }, [systemProgramAccountInfo, amount]);\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n    >\n      <DialogTitle>\n        Create stake account\n      </DialogTitle>\n      <DialogContent>\n        <Typography>\n          Seed: {seed}\n        </Typography>\n        <TextField\n          type=\"number\"\n          value={amount}\n          onChange={e => {\n            setAmount(e.target.value);\n          }}\n          placeholder=\"0\"\n          error={error !== null}\n          helperText={error}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                SOL\n              </InputAdornment>\n            ),\n            inputProps: {\n              step: 0.1,\n            },\n          }}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Close</Button>\n        <Button\n          disabled={sending || Number(amount) === 0 || !!error}\n          onClick={async () => {\n            if(!wallet.publicKey) {\n              return;\n            }\n            const stakePubkey = await PublicKey.createWithSeed(\n              wallet.publicKey,\n              seed,\n              StakeProgram.programId,\n            );\n            const lamports = await connection.getMinimumBalanceForRentExemption(StakeProgram.space) + Number(amount) * LAMPORTS_PER_SOL;\n\n            const transaction = StakeProgram.createAccountWithSeed({\n              fromPubkey: wallet.publicKey,\n              stakePubkey,\n              basePubkey: wallet.publicKey,\n              seed,\n              authorized: new Authorized(\n                wallet.publicKey,\n                wallet.publicKey\n              ),\n              lamports\n            });\n\n            await monitorTransaction(\n              sendTransaction(\n                sendConnection,\n                wallet,\n                transaction.instructions,\n                []\n              ),\n              {\n                onSuccess: () => {\n                  onSuccess();\n                  handleClose();\n                },\n                onError: () => {}\n              }\n            );\n          }}\n        >\n          {sending ? <CircularProgress color=\"secondary\" size={14} /> : \"Create\"}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","//import { Tooltip } from '@material-ui/core';\nimport { parsePriceData } from '@pythnetwork/client';\nimport { clusterApiUrl, Connection, LAMPORTS_PER_SOL, PublicKey } from '@solana/web3.js';\nimport { useContext, useEffect, useMemo, useState } from 'react';\nimport { AccountsContext } from '../contexts/accounts';\nimport { useConnection, useSendConnection } from '../contexts/connection';\nimport { useWallet } from '../contexts/wallet';\nimport { STAKE_PROGRAM_ID } from '../utils/ids';\nimport { StakeAccountMeta } from '../utils/stakeAccounts';\nimport { formatPriceNumber } from '../utils/utils';\nimport { CreateStakeAccountDialog } from './CreateStakeAccount';\n\ninterface WalletSummaryProps {\n  stakeAccountMetas: StakeAccountMeta[] | null;\n  addStakeAccount: (stakePubkey: PublicKey, seed: string) => void;\n}\n\nasync function getSOLPriceUSD(): Promise<number | undefined> {\n  // TODO: Switch to mainnet when available\n  const connection = new Connection(clusterApiUrl('devnet'));\n\n  const SOLUSDPriceAccountKey = new PublicKey('J83w4HKfqxwcq3BEMMkPFSppX3gqekLyLJBexebFVkix');\n  const priceAccountInfo = await connection.getAccountInfo(SOLUSDPriceAccountKey);\n  if (!priceAccountInfo) {\n    return;\n  }\n  const { price, confidence } = parsePriceData(priceAccountInfo?.data);\n\n  console.log(`price: ${price}, confidence: ${confidence}`);\n  return price;\n}\n\nasync function findFirstAvailableSeed(userPublicKey: PublicKey, stakeAccountMetas: StakeAccountMeta[]) {\n  let seedIndex = 0;\n  while(1) {\n    const newStakeAccountPubkey = await PublicKey.createWithSeed(userPublicKey, seedIndex.toString(), STAKE_PROGRAM_ID);\n    const matching = stakeAccountMetas.find(meta => newStakeAccountPubkey.equals(meta.address));\n    if(!matching) {\n      break;\n    }\n    seedIndex++;\n  }\n\n  return seedIndex.toString();\n}\n\nexport default function WalletSummary(props: WalletSummaryProps) {\n  const {stakeAccountMetas, addStakeAccount} = props;\n\n  const connection = useConnection();\n  const sendConnection = useSendConnection();\n  const {wallet} = useWallet();\n\n  const {systemProgramAccountInfo} = useContext(AccountsContext);\n  const [SOLPriceUSD, setSOLPriceUSD] = useState<number>();\n\n  const [seed, setSeed] = useState('0');\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    getSOLPriceUSD()\n      .then(setSOLPriceUSD);\n  }, []);\n\n  const totalStakedSOL = useMemo(() => {\n    const totalLamports = stakeAccountMetas?.reduce((sum, current) => sum + current.lamports, 0);\n    return totalLamports !== undefined ? totalLamports / LAMPORTS_PER_SOL : undefined;\n  }, [stakeAccountMetas]);\n\n  // Yield first seed sequentially from unused seeds\n  useEffect(() => {\n    if(!stakeAccountMetas || !wallet?.publicKey) {\n      return;\n    }\n\n    findFirstAvailableSeed(wallet.publicKey, stakeAccountMetas)\n      .then(setSeed);\n  }, [wallet?.publicKey, stakeAccountMetas]);\n\n  const balance = useMemo(() => {\n    return systemProgramAccountInfo && (systemProgramAccountInfo.lamports / LAMPORTS_PER_SOL);\n  }, [systemProgramAccountInfo])\n\n  const ratio = useMemo(() => {\n    if (totalStakedSOL === undefined || balance === null) return;\n    return Math.floor(totalStakedSOL / (totalStakedSOL + balance) * 100)\n  }, [balance, totalStakedSOL])\n\n  if (!wallet || !systemProgramAccountInfo) {\n    return <></>;\n  }\n\n  return (\n    <>\n      {/* Wallet balance */}\n      <div className=\"solBoxGray w-full font-light flex flex-wrap md:justify-between items-center text-center\">\n        <div className=\"w-0 md:w-1/3\"></div>\n        <div className=\"pb-3 pt-4 w-full md:w-1/3 md:pl-5\">\n          <p className=\"uppercase\">Wallet Balance</p>\n          <p className=\"font-normal text-xl\">{balance} SOL</p>\n          <p className=\"text-xs\">\n            ${(balance && SOLPriceUSD) ? formatPriceNumber.format(balance * SOLPriceUSD) : '-'} ({SOLPriceUSD ? formatPriceNumber.format(SOLPriceUSD) : '-'} $/SOL)\n            {/* <Tooltip title=\"On-chain SOL price from pyth.network oracle\">\n              <div>\n                <img src=\"pyth-icon-48x48.png\" alt=\"PythNetwork\" />\n              </div>\n            </Tooltip> */}\n          </p>\n        </div>\n        <div className=\"w-full pb-5 md:pb-0 md:w-1/3 md:pr-10 md:text-right\">\n          <button\n            className=\"solBtnGray whitespace-nowrap\"\n            onClick={() => setOpen(true)}\n          >\n            Create Stake Account\n          </button>\n        </div>\n      </div>\n\n      { open &&\n        <CreateStakeAccountDialog\n          seed={seed}\n          open={open}\n          setOpen={setOpen}\n          connection={connection}\n          sendConnection={sendConnection}\n          wallet={wallet}\n          onSuccess={async () => {\n            if (!wallet.publicKey) {\n              return;\n            }\n            const newStakeAccountPubkey = await PublicKey.createWithSeed(wallet.publicKey, seed, STAKE_PROGRAM_ID);\n            addStakeAccount(newStakeAccountPubkey, seed);\n          }}\n        />\n      }\n\n      <div className=\"w-full mt-3 flex flex-wrap md:justify-between items-center text-center\">\n        <div className=\"w-full pb-3 lg:border-r-4 lg:border-transparent\">\n          {/* pie chart */}\n          <div className=\"solBoxGray h-44 p-3.5 w-full font-light items-center text-center uppercase flex flex-wrap justify-center\">\n            {/* pie chart - css from added.css */}\n            <div className=\"px-5\">\n              {/* Percentage setting */}\n              <div className=\"chart\" style={{backgroundImage: `conic-gradient(#D5E300 ${ratio}%, #103147 ${ratio}%)`}}>\n                <p className=\"pb-1\">\n                  <span className=\"text-xs leading-none\">Total<br />Staked</span>\n                  <br />\n                  <span className=\"font-bold leading-6\">{totalStakedSOL !== undefined ? formatPriceNumber.format(totalStakedSOL) : '-'} SOL</span>\n                  <br />\n                  <span className=\"text-xs\">\n                    ${(SOLPriceUSD && totalStakedSOL !== undefined) ? formatPriceNumber.format(totalStakedSOL * SOLPriceUSD) : '-'}\n                  </span>\n                </p>\n              </div>\n            </div>\n            <div className=\"px-5\">\n              <div className=\"text-left uppercase leading-5 pb-3\">\n                <p>\n                  <p className=\"bg-solblue-dark w-3 h-3 inline-block\"></p>\n                  <span className=\"text-light text-gray-400 leading-6 pl-1\">Balance</span>\n                  {/* <br />\n                  <span className=\"font-bold pl-5\">123.11 SOL</span>\n                  <br />\n                  <span className=\"text-xs text-light text-gray-400 pl-5\">$43,231.11</span> */}\n                </p>\n              </div>\n              <div className=\"text-left uppercase leading-5\">\n                <p>\n                  <p className=\"bg-solacid w-3 h-3 inline-block\"></p>\n                  <span className=\"text-light text-gray-400 leading-6 pl-1\">Total staked</span>\n                  {/* <br />\n                  <span className=\"font-bold pl-5\">123.11 SOL</span>\n                  <br />\n                  <span className=\"text-xs text-light text-gray-400 pl-5\">$43,231.11 / 6.3% APY</span> */}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import { PublicKey } from '@solana/web3.js';\nimport { useState } from 'react';\nimport { useWallet } from '../contexts/wallet';\n\nexport default function WalletConnector(props: {publicKeyString: string, setPublicKeyString: (pk: string) => void}) {\n  const { publicKey, connected, select, disconnect } = useWallet();\n  const [error, setError] = useState(false);\n\n  return (\n    <div className=\"h-full w-full my-3 flex flex-wrap justify-between text-center\">\n      {!connected ? (\n        <>\n          {/* Input wallet key */}\n          <div className=\"w-full lg:w-4/5 text-solblue-dark\">\n            <div className=\"border-b border-gray-600\">\n              <input\n                className=\"w-full h-7 px-5 text-xs placeholder-gray-700 border-none bg-transparent\"\n                type=\"text\"\n                placeholder=\"Public Key / Wallet Address\"\n                value={props.publicKeyString}\n                onChange={(event) => {\n                  const newPublicKeyString = event.target.value\n                  try {\n                    new PublicKey(newPublicKeyString)\n                    setError(false)\n                  }\n                  catch {\n                    setError(Boolean(newPublicKeyString))\n                  }\n                  props.setPublicKeyString(newPublicKeyString);\n                }}\n              />\n            </div>\n            <span hidden={!error} className=\"text-xs text-red-700\">Public Key not valid.</span>\n          </div>\n\n          {/* Connect wallet button */}\n          <div className=\"pb-4 pt-2 lg:pt-0 text-center lg:text-right w-full lg:w-1/5\">\n            <button className=\"solBtnGray pb-0.5\"\n              onClick={select}\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mb-0.5 mr-1.5 inline-block\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.5\" d=\"M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z\" />\n              </svg>\n              Connect Wallet\n            </button>\n          </div>\n        </>\n      ) :\n      (\n        <div className=\"solBoxBlue w-full font-light flex flex-wrap justify-between items-center\">\n          <div className=\"pl-5 pt-1\">\n            <span>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mb-0.5 mr-1.5 inline-block\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.5\" d=\"M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z\" />\n              </svg>\n              {publicKey?.toBase58()}\n            </span>\n          </div>\n          {/* buttons cluster/disconect */}\n          <div className=\"w-full lg:w-2/5 p-3 text-center md:text-right\">\n            <button className=\"solBtnGray\" onClick={disconnect}>Disconnect</button>\n          </div>\n        </div> \n      )}\n    </div>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport { Button, CircularProgress, IconButton, Tooltip } from '@material-ui/core';\nimport { AccountInfo, Connection, Context, KeyedAccountInfo, ParsedAccountData, PublicKey } from '@solana/web3.js';\nimport {\n  Link as RouterLink\n} from 'react-router-dom';\nimport { accounInfoToStakeAccount as accountInfoToStakeAccount, findStakeAccountMetas, sortStakeAccountMetas, StakeAccountMeta } from '../utils/stakeAccounts';\nimport { StakeAccountCard } from '../components/StakeAccount';\nimport { ReactComponent as SolstakeLogoSvg } from '../assets/logo-white.svg';\nimport { Info } from '@material-ui/icons';\nimport { useWallet } from '../contexts/wallet';\nimport { ENDPOINTS, useConnection, useConnectionConfig } from '../contexts/connection';\nimport HelpDialog from '../components/HelpDialog';\nimport { STAKE_PROGRAM_ID } from '../utils/ids';\nimport { sleep } from '../utils/utils';\nimport Epoch from '../components/Epoch';\nimport WalletSummary from '../components/WalletSummary';\nimport WalletConnector from '../components/WalletConnector';\n\nconst DEMO_PUBLIC_KEY_STRING = '8BaNJXqMAEVrV7cgzEjW66G589ZmDvwajmJ7t32WpvxW';\n\nfunction StakeAccounts({stakeAccountMetas}: {stakeAccountMetas: StakeAccountMeta[]}) {\n  if (stakeAccountMetas.length === 0) {\n    return (\n      <div className=\"solBoxGray w-full font-light flex flex-wrap md:justify-between items-center text-center\">\n        <div className=\"pb-3 pt-4 w-full md:pl-5\">\n          <p>\n            No stake account found\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      {stakeAccountMetas.map(\n        meta => <StakeAccountCard key={meta.address.toBase58()} stakeAccountMeta={meta} />\n      )}\n    </>\n  );\n}\n\nasync function onStakeAccountChangeCallback(connection: Connection, keyedAccountInfo: KeyedAccountInfo, _context: Context, stakeAccounts: StakeAccountMeta[] | null, walletPublicKey: PublicKey): Promise<StakeAccountMeta[] | undefined> {\n  const {accountId, accountInfo} = keyedAccountInfo;\n  console.log(`StakeAccount update for ${accountId.toBase58()}`);\n\n  const index = stakeAccounts?.findIndex(extistingStakeAccountMeta =>\n    extistingStakeAccountMeta.address.equals(accountId)\n  ) ?? -1;\n  let updatedStakeAccounts = stakeAccounts ? [...stakeAccounts] : [];\n\n  // Ideally we should just subscribe as jsonParsed, but that isn't available through web3.js\n  const {value} = await connection.getParsedAccountInfo(accountId);\n  const parsedAccountInfo = value;\n  console.log(accountInfo.lamports, accountInfo.data, accountInfo.owner.toBase58());\n  if (!parsedAccountInfo) {\n    // The account can no longer be found, it has been closed\n    if (index > -1) {\n      updatedStakeAccounts.splice(index, 1);\n      return updatedStakeAccounts;\n    }\n    return;\n  }\n  const newStakeAccount = accountInfoToStakeAccount(parsedAccountInfo);\n  if (!newStakeAccount) {\n    console.log(`Could no find parsed data: ${accountId.toBase58()}`);\n    return;\n  }\n\n  if (index === -1) {\n    console.log(`Could not find existing stake account for address, adding: ${stakeAccounts?.length} ${newStakeAccount}`);\n    const naturalStakeAccountSeedPubkeys = await Promise.all(Array.from(Array(20).keys()).map(async i => {\n      const seed = `${i}`;\n      return PublicKey.createWithSeed(walletPublicKey, seed, STAKE_PROGRAM_ID).then(pubkey => ({seed, pubkey}));\n    }));\n\n    const seed = naturalStakeAccountSeedPubkeys.find(element => element.pubkey.equals(accountId))?.seed ?? 'N.A.';\n    updatedStakeAccounts.push({\n      address: accountId,\n      seed,\n      lamports: parsedAccountInfo.lamports,\n      stakeAccount: newStakeAccount,\n      inflationRewards: [] // In 99.999% of cases this should be correct\n    });\n  }\n  else {\n    updatedStakeAccounts[index].stakeAccount = newStakeAccount;\n  }\n\n  sortStakeAccountMetas(updatedStakeAccounts);\n  return updatedStakeAccounts;\n}\n\nfunction ClusterSelector() {\n  const { url, setUrl } = useConnectionConfig();\n\n  return (\n    <select\n      className=\"solBtnGray\"\n      value={url}\n      onChange={e => setUrl(e.target.value as string)}\n    >\n      {ENDPOINTS.map(({ name, url }) => (\n        <option value={url} key={url}>\n          {name}\n        </option>\n      ))}\n    </select>\n  );\n}\n\nfunction DApp() {\n  const connection = useConnection();\n  const { setUrl } = useConnectionConfig();\n  const { wallet, connected, disconnect } = useWallet();\n  const [publicKeyString, setPublicKeyString] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n  const [stakeAccounts, setStakeAccounts] = useState<StakeAccountMeta[] | null>(null);\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    setStakeAccounts(null);\n    let keyedPublicKey: PublicKey | undefined\n    if (publicKeyString) {\n      try {\n        keyedPublicKey = new PublicKey(publicKeyString)\n      }\n      catch {}\n    }\n    const newPublicKey = connected ? wallet?.publicKey : keyedPublicKey;\n    if (newPublicKey) {\n      setLoading(true);\n      findStakeAccountMetas(connection, newPublicKey)\n        .then(newStakeAccounts => {\n          setStakeAccounts(newStakeAccounts);\n          setLoading(false);\n        });\n    }\n  }, [connection, connected, wallet?.publicKey, publicKeyString]);\n\n  async function addStakeAccount(stakeAccountPublicKey: PublicKey, seed: string) {\n    if (!stakeAccounts) {\n      return;\n    }\n    let newStakeAccounts = [...stakeAccounts];\n\n    // Try a few times with standoff\n    let parsedAccountInfo: AccountInfo<Buffer | ParsedAccountData> | null = null;\n    for (let i = 0;i < 5;i++) {\n      parsedAccountInfo = (await connection.getParsedAccountInfo(stakeAccountPublicKey)).value;\n      if (parsedAccountInfo) {\n        break;\n      }\n      else {\n        await sleep(600);\n      }\n    }\n    if (!parsedAccountInfo) {\n      console.log('Did not find new account after retries');\n      return;\n    }\n    const stakeAccount = accountInfoToStakeAccount(parsedAccountInfo);\n    if (!stakeAccount) {\n      return;\n    }\n    newStakeAccounts.push({\n      address: stakeAccountPublicKey,\n      seed,\n      lamports: parsedAccountInfo.lamports,\n      stakeAccount,\n      inflationRewards: []\n    });\n    sortStakeAccountMetas(newStakeAccounts);\n    setStakeAccounts(newStakeAccounts);\n  }\n\n  useEffect(() => {\n    if (!wallet?.publicKey) {\n      return;\n    }\n    let walletPublicKey = wallet.publicKey;\n\n    const subscriptionId = connection.onProgramAccountChange(\n      STAKE_PROGRAM_ID,\n      async (keyedAccountInfo, context) => {\n        const updatedStakeAccounts = await onStakeAccountChangeCallback(\n          connection,\n          keyedAccountInfo,\n          context,\n          stakeAccounts,\n          walletPublicKey,\n        );\n        if (updatedStakeAccounts) {\n          setStakeAccounts(updatedStakeAccounts);\n        }\n      },\n      connection.commitment,\n      [{\n        memcmp: {\n          offset: 12,\n          bytes: wallet.publicKey.toBase58()\n        }\n      }]\n    );\n\n    return () => {\n      console.log('removeProgramAccountChangeListener');\n      connection.removeProgramAccountChangeListener(subscriptionId);\n    };\n  }, [connection, wallet, stakeAccounts]);\n\n  // Unfortunately we need to listen again because closing accounts do not notify above\n  // In addition, subscription above is bugged and often drops notifications https://github.com/solana-labs/solana/issues/18587\n  useEffect(() => {\n    const subscriptionIds = stakeAccounts?.map(stakeAccountMeta => {\n      return connection.onAccountChange(stakeAccountMeta.address, async (accountInfo, context) => {\n        const updatedStakeAccounts = await onStakeAccountChangeCallback(\n          connection,\n          {\n            accountId: stakeAccountMeta.address,\n            accountInfo\n          },\n          context,\n          stakeAccounts,\n          PublicKey.default,\n        );\n        if (updatedStakeAccounts) {\n          setStakeAccounts(updatedStakeAccounts);\n        }\n      });\n    });\n\n    // Necessary subscription cleanup\n    return () => {\n      subscriptionIds?.forEach(id => {\n        connection.removeAccountChangeListener(id);\n      })\n    };\n  }, [connection, stakeAccounts]);\n  \n  return (\n    <div id=\"dapp\" className=\"h-full\">\n      {/* Header */}\n      <div className=\"h-20 flex flex-wrap justify-between px-10 py-4\">\n        <div className=\"h-full xl:w-1/6 w-1/3\">\n          <RouterLink to=\"/\">\n            <SolstakeLogoSvg />\n          </RouterLink>\n        </div>\n        \n        <div>\n          <IconButton onClick={() => { setOpen(true); }}>\n            <Info />\n          </IconButton>\n          <div className=\"inline-block m-2\">\n            <Tooltip title=\"Use known stake account authority\">\n              <Button\n                variant=\"contained\"\n                onClick={() => {\n                  disconnect();\n                  setUrl(ENDPOINTS[0].url);\n                  setPublicKeyString(DEMO_PUBLIC_KEY_STRING);\n                }}\n              >\n                Demo\n              </Button>\n            </Tooltip>\n          </div>\n          <ClusterSelector />\n        </div>\n      </div>\n\n      {/* Main flex wrapper */}\n      <div className=\"h-full p-10 text-center\">\n\n        <div className=\"leading-none flex flex-wrap md:inline-flex sm:w-full md:w-11/12 lg:w-11/12 xl:w-4/5 max-w-screen-xl\">\n          <Epoch />\n\n          <WalletConnector\n            publicKeyString={publicKeyString}\n            setPublicKeyString={setPublicKeyString}\n          />\n\n          <WalletSummary\n            stakeAccountMetas={stakeAccounts}\n            addStakeAccount={addStakeAccount}\n          />\n\n          {loading && (\n            <div className=\"pb-3 pt-4 w-full md:pl-5\">\n              <CircularProgress color=\"secondary\" />\n            </div>\n          )}\n          {stakeAccounts && (\n            <StakeAccounts stakeAccountMetas={stakeAccounts} />\n          )}\n\n        </div>\n      </div>\n\n      <HelpDialog\n        open={open}\n        handleClose={() => setOpen(false)}\n      />\n    </div>\n  );\n}\n\nexport default DApp;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M297.216 243.2c0 15.616-11.52 28.416-26.112 28.416-14.336 0-26.112-12.8-26.112-28.416s11.52-28.416 26.112-28.416c14.592 0 26.112 12.8 26.112 28.416zm-119.552-28.416c-14.592 0-26.112 12.8-26.112 28.416s11.776 28.416 26.112 28.416c14.592 0 26.112-12.8 26.112-28.416.256-15.616-11.52-28.416-26.112-28.416zM448 52.736V512c-64.494-56.994-43.868-38.128-118.784-107.776l13.568 47.36H52.48C23.552 451.584 0 428.032 0 398.848V52.736C0 23.552 23.552 0 52.48 0h343.04C424.448 0 448 23.552 448 52.736zm-72.96 242.688c0-82.432-36.864-149.248-36.864-149.248-36.864-27.648-71.936-26.88-71.936-26.88l-3.584 4.096c43.52 13.312 63.744 32.512 63.744 32.512-60.811-33.329-132.244-33.335-191.232-7.424-9.472 4.352-15.104 7.424-15.104 7.424s21.248-20.224 67.328-33.536l-2.56-3.072s-35.072-.768-71.936 26.88c0 0-36.864 66.816-36.864 149.248 0 0 21.504 37.12 78.08 38.912 0 0 9.472-11.52 17.152-21.248-32.512-9.728-44.8-30.208-44.8-30.208 3.766 2.636 9.976 6.053 10.496 6.4 43.21 24.198 104.588 32.126 159.744 8.96 8.96-3.328 18.944-8.192 29.44-15.104 0 0-12.8 20.992-46.336 30.464 7.68 9.728 16.896 20.736 16.896 20.736 56.576-1.792 78.336-38.912 78.336-38.912z\"\n});\n\nfunction SvgDiscordBrands(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    \"data-prefix\": \"fab\",\n    \"data-icon\": \"discord\",\n    className: \"svg-inline--fa fa-discord fa-w-14\",\n    role: \"img\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 448 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDiscordBrands);\nexport default __webpack_public_path__ + \"static/media/discord-brands.a6bf2a68.svg\";\nexport { ForwardRef as ReactComponent };","export function validateEmail(email: string): boolean {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nexport async function submitEmail(email: string) {\n  try {\n    const response = await fetch(\n    'https://hooks.zapier.com/hooks/catch/1602339/bob62i2/',\n    {\n        method: 'POST',\n        // https://zapier.com/help/create/code-webhooks/troubleshoot-webhooks-in-zapier#posting-json-from-web-browser-access-control-allow-headers-in-preflight-response-error\n        body: JSON.stringify({\n        'email': email\n        })\n    }\n    );\n\n    console.log(response);\n    return response.ok;\n  }\n  catch(TypeError) { // TypeError: NetworkError when attempting to fetch resource.\n    return false;\n  }\n}","import React, { useState } from 'react';\nimport '../App.css';\n//import '../Stars.sass';\nimport {\n  Link\n} from 'react-router-dom';\nimport { Box, Button, TextField, Typography, IconButton, Grid, Dialog, DialogTitle, DialogActions, DialogContent, makeStyles, Theme, createStyles, Snackbar, SvgIcon } from '@material-ui/core';\nimport { ReactComponent as SolstakeLogoMainSvg } from '../assets/logo-white.svg';\nimport { GitHub, Send, Twitter, YouTube } from '@material-ui/icons';\nimport { ReactComponent as Discord } from '../assets/discord-brands.svg';\nimport { validateEmail } from '../utils/email';\nimport { Alert } from '@material-ui/lab';\nimport { Color } from '@material-ui/lab/Alert';\nimport { submitEmail } from '../utils/email';\n\nconst styles = {\n  largeIcon: {\n    fontSize: \"2.5em\"\n  },\n};\n\nfunction SendButton(props: {callback: () => Promise<void>, disabled: boolean}) {\n  return (\n    <Button\n      onClick={props.callback}\n      disabled={props.disabled}\n    >\n      <Send />\n    </Button>\n  );\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n  }),\n);\n\ninterface Message {\n  open: boolean;\n  content: string;\n  severity: Color;\n};\n\nexport function Landing() {\n    const [email, setEmail] = useState('');\n    const [isEmailValid, setIsEmailValid] = useState(false);\n    const [message, setMessage] = useState<Message>({open: false, content: '', severity: 'success'});\n    const [open, setOpen] = useState(false);\n    const [openVideo, setOpenVideo] = useState(false);\n  \n    function handleClose() {\n      setOpen(false);\n    }\n\n    function handleCloseVideo() {\n      setOpenVideo(false);\n    }\n\n    function handleCloseSnackbar() {\n      setMessage({open: false, content: '', severity: 'success'});\n    }\n\n    async function submitAndFeedback() {\n      if (email) {\n        const success = await submitEmail(email);\n        if (success) {\n          setEmail('');\n          setMessage({open: true, content: 'Your email has been sent, we will get back to you when solstake is released', severity: 'success'});\n        }\n        else {\n          setMessage({open: true, content: 'Failed to send email, please try again later', severity: 'error'});\n        }\n      }\n    }\n\n    const classes = useStyles();\n  \n    return (\n      <div id=\"landing\">\n        <div className={classes.root}>\n          <Grid\n            container\n            alignItems=\"center\"\n            justify=\"center\"\n            direction=\"column\"\n            style={{minHeight: '100vh', textAlign: 'center', overflow: 'hidden'}}\n          >\n            <Grid item xs={8}>\n              <SolstakeLogoMainSvg />\n              <Typography style={{visibility: 'hidden'}}>\n                Hack for non working svg scaling SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS\n              </Typography>\n              <Typography color=\"primary\" variant=\"h4\">\n                Solstake makes staking on Solana easier than ever - no matter what wallet you’re using. \n                Stake your SOL, manage accounts and earn rewards all in a single and easy-to-use app.\n              </Typography>\n\n              <Box m={4} />\n\n              <Link style={{textDecoration: 'none'}} to=\"/app\">\n                <Button variant=\"contained\" size=\"large\">\n                  <Typography variant=\"h5\">\n                    Use Solstake\n                  </Typography>\n                </Button>\n              </Link>\n    \n              <Box m={4} />\n\n              <Typography color=\"primary\" variant=\"h5\">\n                We’re just getting started around here. In the meantime stay updated on product releases, new features and more by subscribing below.\n              </Typography>\n    \n              <Box m={4} />\n\n              <TextField\n                label=\"Enter your email\"\n                variant=\"outlined\"\n                style={{width: '40%'}}\n                error={email !== '' && !isEmailValid}\n                helperText={(email !== '' && !isEmailValid) ? 'Invalid' : null}\n                onKeyDown={async (event) => {\n                  if (event.key === 'Enter') {\n                    await submitAndFeedback();\n                  }\n                }}\n                onChange={(event) => {\n                  const email = event.target.value;\n                  setEmail(email);\n\n                  const isValid = validateEmail(email);\n                  setIsEmailValid(isValid);\n                }}\n                value={email}\n                InputProps={{\n                  endAdornment: <SendButton\n                    callback={submitAndFeedback}\n                    disabled={!isEmailValid}\n                  />\n                }}\n              />\n    \n              <Box m={3} />\n    \n              <div>\n                <IconButton\n                  href=\"https://github.com/rooware-io/solstake\"\n                  rel=\"noopener noreferrer\" target=\"_blank\"\n                >\n                  <GitHub style={styles.largeIcon} />\n                </IconButton>\n                <IconButton\n                  onClick={() => setOpenVideo(true)}\n                >\n                  <YouTube style={styles.largeIcon} />\n                </IconButton>\n                <IconButton\n                  href=\"https://discord.gg/r5fZHdfu\"\n                  rel=\"noopener noreferrer\" target=\"_blank\"\n                >\n                  <SvgIcon style={styles.largeIcon}>\n                    <Discord />\n                  </SvgIcon>\n                </IconButton>\n                <IconButton\n                  href=\"https://twitter.com/solstakeio\"\n                  rel=\"noopener noreferrer\" target=\"_blank\"\n                >\n                  <Twitter style={styles.largeIcon} />\n                </IconButton>\n              </div>\n            </Grid>\n          </Grid>\n        </div>\n        <Dialog\n          title=\"Email sent!\"\n          fullWidth={true}\n          open={open}\n          onClose={handleClose}\n        >\n          <DialogTitle>Email sent!</DialogTitle>\n          <DialogContent>\n            <Box m={1}>\n              <Typography>\n                Thank you for registering, we will get back to you when solstake is production ready\n              </Typography>\n            </Box>\n          </DialogContent>\n  \n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              OK\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Dialog\n          open={openVideo}\n          fullWidth\n          maxWidth=\"md\"\n          onClose={handleCloseVideo}\n        >\n          <div className=\"videoWrapper\">\n            <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/JUDG6j5ktW4\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n          </div>\n        </Dialog>\n        {/* <div id=\"stars\"></div>\n        <div id=\"stars2\"></div>\n        <div id=\"stars3\"></div> */}\n        <Snackbar open={message.open} autoHideDuration={10000} onClose={handleCloseSnackbar}>\n          <Alert onClose={handleClose} severity={message.severity}>\n            {message.content}\n          </Alert>\n        </Snackbar>\n      </div>\n    );\n  }","import { createMuiTheme } from \"@material-ui/core\";\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#FFFFFF',\n    },\n    secondary: {\n      main: '#3D96A0'\n    }\n  },\n  typography: {\n    fontFamily: '\"Red Hat Display\", sans-serif'\n  }\n});","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport {\n  HashRouter as Router,\n  Route\n} from 'react-router-dom';\nimport DApp from './views/DApp';\nimport { Landing } from './views/Landing';\nimport { ConnectionProvider } from './contexts/connection';\nimport { WalletProvider } from './contexts/wallet';\nimport { ThemeProvider } from '@material-ui/core';\nimport { theme } from './assets/theme';\nimport { EpochProvider } from './contexts/epoch';\nimport { AccountsProvider } from './contexts/accounts';\nimport { SnackbarProvider } from 'notistack';\nimport { ValidatorsProvider } from './contexts/validators';\n\nfunction App() {\n  return (\n    <ConnectionProvider>\n      <WalletProvider>\n        <AccountsProvider>\n          <EpochProvider>\n            <ValidatorsProvider>\n              <SnackbarProvider maxSnack={5} autoHideDuration={10000}>\n                <ThemeProvider theme={theme}>\n                  <Router>\n                    <Route exact path='/' component={Landing} />\n                    <Route path={['/app/validator/:validator', '/app']} component={DApp} />\n                  </Router>\n                </ThemeProvider>\n              </SnackbarProvider>\n            </ValidatorsProvider>\n          </EpochProvider>\n        </AccountsProvider>\n      </WalletProvider>\n    </ConnectionProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}